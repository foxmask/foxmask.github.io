<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Le Free de la Passion - flake8</title><link href="https://foxmask.net/" rel="alternate"></link><link href="https://foxmask.net/feeds/flake8.atom.xml" rel="self"></link><id>https://foxmask.net/</id><updated>2016-02-17T19:00:00+01:00</updated><subtitle>La passion de la liberté</subtitle><entry><title>PyCharm running Flake8</title><link href="https://foxmask.net/post/2016/02/17/pycharm-running-flake8/" rel="alternate"></link><published>2016-02-17T19:00:00+01:00</published><updated>2016-02-17T19:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2016-02-17:/post/2016/02/17/pycharm-running-flake8/</id><summary type="html">&lt;h2&gt;The Ugly&lt;/h2&gt;
&lt;p&gt;As I like clean things, I like when python tells me that I made ugly things to be able to fix them.&lt;/p&gt;
&lt;p&gt;With this in mind, first of all, I used the service &lt;a href="https://codeclimate.com"&gt;CodeClimate&lt;/a&gt;.
This one permits to tell you where your code can be improved and how …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Ugly&lt;/h2&gt;
&lt;p&gt;As I like clean things, I like when python tells me that I made ugly things to be able to fix them.&lt;/p&gt;
&lt;p&gt;With this in mind, first of all, I used the service &lt;a href="https://codeclimate.com"&gt;CodeClimate&lt;/a&gt;.
This one permits to tell you where your code can be improved and how.
But the service enters in the game, once the commits are done and pushed on the repository.&lt;/p&gt;
&lt;p&gt;As I try to keep the repository as clean as possible, I dont like that : test improvements, commit and push them, get the result from codeclimate, do anoither improvement and so on...&lt;/p&gt;
&lt;h2&gt;The Beauty&lt;/h2&gt;
&lt;p&gt;So I decide to stop that and ask python to tell me where the code need to be improved before any commit.&lt;/p&gt;
&lt;p&gt;To do so, as I use &lt;a href="https://www.jetbrains.com/pycharm/download/index.html"&gt;PyCharm 5.1 EAP&lt;/a&gt;, since a few days, I searched a way to make PyCharm detects and suggests improvements from the opened files.&lt;/p&gt;
&lt;p&gt;The code inspection works fine with PEP8, the result of the inspection is automatically displayed in the right margin of the opened file, but it seems there is nothing for Flake8 and McCabe. &lt;/p&gt;
&lt;p&gt;So here is what I did :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in my virtualenv &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;flake8&lt;/span&gt;
&lt;span class="n"&gt;flake&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;
&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pep8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;7.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pyflakes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mccabe&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CPython&lt;/span&gt; &lt;span class="mf"&gt;3.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;in PyCharm, go to File &amp;gt; Settings &amp;gt; External Tools &amp;gt; click on "+" and fill the fields as below :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="/static/2016/02/pycharm_running_flake8_settings.png"&gt;&lt;img alt="PyCharm 5 Menu to setup Flake8" src="/static/2016/02/pycharm_running_flake8_settings.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;once it's done you now have an option in the menu External Tools "Flake8"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="/static/2016/02/pycharm_running_flake8_menu.png"&gt;&lt;img alt="PyCharm 5 action Flake8" src="/static/2016/02/pycharm_running_flake8_menu.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;then run it and see in the bottom of the PyCharm window with the "console" to see what's wrong (or not) with the module you've selected&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="/static/2016/02/pycharm_running_flake8_final_result.png"&gt;&lt;img alt="PyCharm 5 final result by Flake8" src="/static/2016/02/pycharm_running_flake8_final_result.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if you prefer to run flake8 on the entire folder, change :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;complexity&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;FileDir&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;FileName&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;complexity&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;FilePath&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Caveats :&lt;/h2&gt;
&lt;p&gt;May be I went too far and something exists and is much better than this one.&lt;/p&gt;
&lt;p&gt;For example, now, if you switch of project, the previous settings remain with the path of the virtualenv we've setup. And if you change the path for the project B, and open project A, the modification from B will remain for A...
As settings for Project do not include this parameter yet, but just "interpreter" and "structure", we are a little bit embarrassed.&lt;/p&gt;
&lt;h2&gt;Conclusion :&lt;/h2&gt;
&lt;p&gt;At least now I'm ready to (try to) make better things ;)&lt;/p&gt;</content><category term="Techno"></category><category term="pycharm"></category><category term="flake8"></category></entry></feed>