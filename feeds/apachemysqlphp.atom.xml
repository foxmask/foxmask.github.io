<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Le Free de la Passion - ApacheMySqlPHP</title><link href="https://foxmask.net/" rel="alternate"></link><link href="https://foxmask.net/feeds/apachemysqlphp.atom.xml" rel="self"></link><id>https://foxmask.net/</id><updated>2013-05-01T13:20:00+02:00</updated><subtitle>La passion de la liberté</subtitle><entry><title>HaveFnuBB les archives sont de retour du futur</title><link href="https://foxmask.net/post/2013/05/01/havefnubb-les-archives-sont-de-retour-du-futur/" rel="alternate"></link><published>2013-05-01T13:20:00+02:00</published><updated>2013-05-01T13:20:00+02:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-05-01:/post/2013/05/01/havefnubb-les-archives-sont-de-retour-du-futur/</id><summary type="html">&lt;p&gt;Avec mon déménagement de site web du projet HaveFnuBB (le forum sous GPL
produit avec &lt;a href="http://jelix.org"&gt;Jelix&lt;/a&gt;), j'ai malencontreusement oublié
de récupérer mes archives du forum que je vous proposais au
téléchargement. Rien que ça :-)&lt;/p&gt;
&lt;p&gt;Fort heureusement on me l'a fait remarquer et j'ai donc remis en ligne
les versions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Avec mon déménagement de site web du projet HaveFnuBB (le forum sous GPL
produit avec &lt;a href="http://jelix.org"&gt;Jelix&lt;/a&gt;), j'ai malencontreusement oublié
de récupérer mes archives du forum que je vous proposais au
téléchargement. Rien que ça :-)&lt;/p&gt;
&lt;p&gt;Fort heureusement on me l'a fait remarquer et j'ai donc remis en ligne
les versions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.3.6 pour jelix 1.1&lt;/li&gt;
&lt;li&gt;1.4.0 pour jelix 1.2&lt;/li&gt;
&lt;li&gt;1.5.0 pour jelix 1.2 (aussi)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://havefnubb.foxmask.info/downloads/" title="téléchargement de Havefunbb"&gt;Tout est
là&lt;/a&gt;&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="HaveFnuBB"></category><category term="Jelix"></category></entry><entry><title>de PHP à Python : Minie petite souris</title><link href="https://foxmask.net/post/2013/03/04/de-php-a-python-minie-petite-souris/" rel="alternate"></link><published>2013-03-04T10:00:00+01:00</published><updated>2013-03-04T10:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-03-04:/post/2013/03/04/de-php-a-python-minie-petite-souris/</id><summary type="html">&lt;p&gt;Nouvel opus de la série de &lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;de PHP à
Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aujourd'hui, Comment parcourir un fichier de configuration ini ?&lt;/p&gt;
&lt;p&gt;Alors en intro, un truc bien cool pour tout à chacun : les fichiers ini
se lisent aussi bien avec Python que PHP.&lt;/p&gt;
&lt;p&gt;Zavez une appli avec un bon (gros) fichier de config …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nouvel opus de la série de &lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;de PHP à
Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aujourd'hui, Comment parcourir un fichier de configuration ini ?&lt;/p&gt;
&lt;p&gt;Alors en intro, un truc bien cool pour tout à chacun : les fichiers ini
se lisent aussi bien avec Python que PHP.&lt;/p&gt;
&lt;p&gt;Zavez une appli avec un bon (gros) fichier de config au format ini ; pas
de problème, vous allez voir ce que vous allez voir ;)&lt;/p&gt;
&lt;p&gt;Pour illustrer ce billet j'ai pris un fichier de config de mon forum
&lt;a href="http://havefnubb.foxmask.info" title="HaveFnuBB! Forum PHP Libre et Open Source | Free Open Source PHP Forum"&gt;HaveFnuBB&lt;/a&gt;
écrit en PHP &lt;a href="https://github.com/havefnubb/havefnubb/blob/master/havefnubb/var/config/defaultconfig.ini.php.dist" title="defaultconfig.ini.dist de HaveFnuBB"&gt;que
voici&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Le bout de code PHP lisant mon fichier de config permet de connaitre les
Réponses HTML possible, le code est le suivant :&lt;br&gt;
&lt;strong&gt;de PHP ...&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;Ceci affichera les valeurs de mes variables définies dans ma section sus mentionnée&lt;/span&gt;

&lt;span class="x"&gt;array(3) {&lt;/span&gt;
&lt;span class="x"&gt;  [&amp;quot;minifyCSS&amp;quot;]=&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  string(1) &amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;  [&amp;quot;minifyJS&amp;quot;]=&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  string(0) &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;  [&amp;quot;minifyCheckCacheFiletime&amp;quot;]=&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  string(0) &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;... à Python&lt;/strong&gt;&lt;br&gt;
Pour le script python cela donnera&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ConfigParser&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/havefnubb/var/config/defaultconfig.ini.php.dist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jResponseHtml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;pour obtenir en résultat :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;minifyjs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;minifycss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;on&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;minifycheckcachefiletime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pour l'oeil aguerri, vous aurez remarqué que 1 est devenu on et "" est
devenu off pour python.&lt;/p&gt;
&lt;p&gt;Le module
&lt;a href="http://docs.python.org/2/library/configparser.html"&gt;ConfigParser&lt;/a&gt; ne se
contente pas que de vous afficher le contenu d'une section (fort
heureusement).&lt;br&gt;
Avec celui-ci vous avez un accès direct à tous les paramètres avec une
instruction &lt;em&gt;get&lt;/em&gt; comme ceci :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ConfigParser&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/havefnubb/var/config/defaultconfig.ini.php.dist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jResponseHtml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;minifyjs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vous affichera le "off" vu plus haut.&lt;/p&gt;
&lt;p&gt;Outre l'accès direct, vous pouvez également pondre un fichier de config
à la volée en commençant par ajouter la section puis les variables
distinctes comme ceci :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ConfigParser&lt;/span&gt;

&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RawConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_section&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Section1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Section1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;an_int&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Section1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a_bool&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Section1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a_float&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3.1415&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Section1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;baz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fun&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Section1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Section1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%(bar)s&lt;/span&gt;&lt;span class="s1"&gt; is &lt;/span&gt;&lt;span class="si"&gt;%(baz)s&lt;/span&gt;&lt;span class="s1"&gt;!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Writing our configuration file to &amp;#39;example.cfg&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;example.cfg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;configfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;configfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Produira un fichier &lt;strong&gt;example.cfg&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Section1]&lt;/span&gt;
&lt;span class="na"&gt;an_int&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;15&lt;/span&gt;
&lt;span class="na"&gt;a_bool&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;a_float&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;3.1415&lt;/span&gt;
&lt;span class="na"&gt;baz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;fun&lt;/span&gt;
&lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Python&lt;/span&gt;
&lt;span class="na"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;%(bar)s is %(baz)s!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ici %(bar) et %(baz) seront remplacées par les valeurs de leur variable
définie juste au dessus&lt;/p&gt;
&lt;p&gt;Coté PHP on n'a rien d'équivalent... sauf au sein de(s) framework(s) PHP
comme Jelix et sa méthode
&lt;strong&gt;&lt;a href="https://github.com/havefnubb/havefnubb/blob/master/havefnubb/migration/wizard/pages/migrate/migrate.page.php#L355"&gt;jIniFileModifier('fichier')-&gt;getValue('variable','section')&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;La prochaine partie traitera du traitement de la journalisation (les
logs)&lt;/em&gt;&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="python"></category></entry><entry><title>de PHP à Python : MeetGeek !</title><link href="https://foxmask.net/post/2013/02/25/de-php-a-python-meetgeek/" rel="alternate"></link><published>2013-02-25T09:44:00+01:00</published><updated>2013-02-25T09:44:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-02-25:/post/2013/02/25/de-php-a-python-meetgeek/</id><summary type="html">&lt;p&gt;J'aurai pu monter un site "QQ la praline", style MeetGeek (merde il est
déjà pris:P) pour coucher sur le papier ce qui suit ;)&lt;/p&gt;
&lt;p&gt;Samedi j'ai lancé &lt;a href="https://twitter.com/foxmask/status/305244330103287810"&gt;une proposition en l'air sans aucun formalisme sur
twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cette proposition la voici :&lt;br&gt;
Vous êtes développeur PHP et avez envie de vous mettre …&lt;/p&gt;</summary><content type="html">&lt;p&gt;J'aurai pu monter un site "QQ la praline", style MeetGeek (merde il est
déjà pris:P) pour coucher sur le papier ce qui suit ;)&lt;/p&gt;
&lt;p&gt;Samedi j'ai lancé &lt;a href="https://twitter.com/foxmask/status/305244330103287810"&gt;une proposition en l'air sans aucun formalisme sur
twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cette proposition la voici :&lt;br&gt;
Vous êtes développeur PHP et avez envie de vous mettre au python ou
vous vous êtes lancés il y a peu et souhaitez monter un projet
opensource ?&lt;/p&gt;
&lt;p&gt;Je vous propose mes services !&lt;/p&gt;
&lt;p&gt;Quel genre de projet m'intéresse ? Tous.&lt;/p&gt;
&lt;p&gt;Que ce soit une paire de libs pour télécharger des bidules de l'autre
bout du web ou un projet web en django / bottle, ça sera avec plaisir
que je tenterai d'apporter ma contribution.&lt;/p&gt;
&lt;p&gt;L'unique but à tout cela, comme un harlem shake : je bouge tout seul là,
mais, bouger à plusieurs serait l'éclate ;)&lt;br&gt;
c'est sans autre contre partie que participer à un projet pour le
plaisir.&lt;/p&gt;
&lt;p&gt;Pourquoi cibler des développeurs PHP ? Parce qu'il n'y aura pas de grand
fossé entre nous :-)&lt;/p&gt;
&lt;p&gt;Si des projets python existant manquent de bras, je ne suis pas fermé
pour contribuer également. Je vous dirai si je me sens à l'aise dans mes
baskets pour votre projet.&lt;/p&gt;
&lt;p&gt;J'ai de la motivation à revendre alors chuis prêt à moudre de grain.&lt;/p&gt;
&lt;p&gt;Vous pourriez vous dire s'il est si motivé il n'a qu'à lancer ses
propres projets. C'est déjà fait mais seul c'est beaucoup moins fun.&lt;/p&gt;
&lt;p&gt;Si vous voulez tout de même voir, ceux ci , sont
&lt;a href="https://github.com/foxmask/django_shortener"&gt;ici&lt;/a&gt; : un gestionnaire de
racourcisseurs d'URL et &lt;a href="https://github.com/foxmask/django-th"&gt;là&lt;/a&gt; un
ifttt like (veryvery early stage)&lt;/p&gt;
&lt;p&gt;Pour revenir sur MeetGeek, l'idée que je m'en faisais, aurait été de
mettre en relations des (idées de) projets et des geeks motivés pour
contribuer.&lt;/p&gt;
&lt;p&gt;Voilà ! Donc Si vous êtes intéressés faites tomber votre commentaire à
la suite ;)&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="python"></category></entry><entry><title>Jelix PHP5 Framework : version 1.5.0 out</title><link href="https://foxmask.net/post/2013/02/20/jelix-1-5-0-out/" rel="alternate"></link><published>2013-02-20T15:11:00+01:00</published><updated>2013-02-20T15:11:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-02-20:/post/2013/02/20/jelix-1-5-0-out/</id><summary type="html">&lt;p&gt;Le fameux &lt;a href="http://www.jelix.org"&gt;Framework PHP5 Jelix&lt;/a&gt; sort sa version
1.5.0&lt;/p&gt;
&lt;p&gt;Les contributeurs se sont mis en 4 pour sortir cette dernière version
dont voici le menu des nouveautés :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Support PHP 5.3 only&lt;/strong&gt; à présent. Utilisation dans Jelix des
    fonctionnalités introduites par PHP 5.3, comme les fonctions
    anonymes …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Le fameux &lt;a href="http://www.jelix.org"&gt;Framework PHP5 Jelix&lt;/a&gt; sort sa version
1.5.0&lt;/p&gt;
&lt;p&gt;Les contributeurs se sont mis en 4 pour sortir cette dernière version
dont voici le menu des nouveautés :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Support PHP 5.3 only&lt;/strong&gt; à présent. Utilisation dans Jelix des
    fonctionnalités introduites par PHP 5.3, comme les fonctions
    anonymes, late static binding, les namespaces, la constante
    __DIR__ etc&lt;/li&gt;
&lt;li&gt;Support de HTML5 avec un nouvel objet Response HTML&lt;/li&gt;
&lt;li&gt;Pour &lt;strong&gt;jForms&lt;/strong&gt; : Le générateur HTML est maintenant extensible. Vous
    pouvez fournir vos propres plugins pour générer tel ou tel contrôle
    de formulaire.&lt;/li&gt;
&lt;li&gt;Pour &lt;strong&gt;jDao&lt;/strong&gt; : il est à présent possible d'importer la définition
    d'un autre DAO pour éviter de recopier une DAO similaire et ajouter
    prou de colonnes en plus&lt;/li&gt;
&lt;li&gt;Pour &lt;strong&gt;jAuth&lt;/strong&gt; : nouveau système de hashage&lt;/li&gt;
&lt;li&gt;Pour &lt;strong&gt;jKVDb&lt;/strong&gt;: nouveau plugin pour &lt;a href="http://php.net/manual/fr/book.dba.php"&gt;l'API
    dba&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nouveaux modules&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;jSoap fusionnant jWSDL&lt;/li&gt;
&lt;li&gt;jTCPDF&lt;/li&gt;
&lt;li&gt;jACL2 : déplacement des ressources (classes, properties) dans un
    module dédié jacl2&lt;/li&gt;
&lt;li&gt;jPref: déplacement de la classe jPref dans un module dédié&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;outre tout cela, nombre de nouveautés concernent jZones, jEvents,
jLocale, jelix-script et j'en passe.&lt;br&gt;
&lt;a href="http://docs.jelix.org/fr/manuel-1.5/nouveautes"&gt;Ces nouveautés sont passées au
crible&lt;/a&gt; sur le site
même.&lt;/p&gt;
&lt;p&gt;Comme à l'accoutumé &lt;a href="http://docs.jelix.org/fr/manuel-1.5/"&gt;la doc complète pour cette
version&lt;/a&gt; est disponible.&lt;br&gt;
Je vous invite donc à &lt;a href="http://jelix.org/articles/fr/telechargement/stable/1.5"&gt;Télécharger cette dernière version
1.5.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Et la v 1.6.0 est déjà sur les rails, &lt;a href="https://github.com/jelix/jelix" title="Forker Jelix"&gt;viendez
forker&lt;/a&gt; ;)&lt;/p&gt;
&lt;p&gt;Have Fnu ! :D&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="Jelix"></category></entry><entry><title>de PHP à Python : X aime L</title><link href="https://foxmask.net/post/2013/02/18/de-php-a-python-x-aime-l/" rel="alternate"></link><published>2013-02-18T10:00:00+01:00</published><updated>2013-02-18T10:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-02-18:/post/2013/02/18/de-php-a-python-x-aime-l/</id><summary type="html">&lt;p&gt;Nouvel opus de la série de &lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;de PHP à
Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aujourd'hui, Comment parcourir un fichier XML ?&lt;/p&gt;
&lt;p&gt;Bon en plus je vais pousser le bouchon à utiliser XPath ;) tant qu'à
lire un fichier, autant que ça soit "intelligent" et pas juste lire pour
lire (quoi je me répète répète;)&lt;/p&gt;
&lt;p&gt;La &lt;em&gt;matière …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nouvel opus de la série de &lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;de PHP à
Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aujourd'hui, Comment parcourir un fichier XML ?&lt;/p&gt;
&lt;p&gt;Bon en plus je vais pousser le bouchon à utiliser XPath ;) tant qu'à
lire un fichier, autant que ça soit "intelligent" et pas juste lire pour
lire (quoi je me répète répète;)&lt;/p&gt;
&lt;p&gt;La &lt;em&gt;matière première&lt;/em&gt; commune à ces 2 scripts sera ce fichier XML allégé
pour l'occasion mais issu directement de
&lt;a href="http://buildprocess.sourceforge.net/"&gt;autodeploy&lt;/a&gt; un outil ( opensource
devrai-je le préciser ? ) que j'utilise au quotidien pour faire des
déploiements d'applications les doigts dans le nez ;)&lt;/p&gt;
&lt;p&gt;En prod je n'ai &lt;em&gt;que&lt;/em&gt; 200 environnements, avec en moyenne près de 10
targz chacun, je vous laisse imaginez le poids du trucs (pres de 10Mo
grosso merdo;) Vivendi qui s'en sert en gere 10x plus ;)&lt;/p&gt;
&lt;p&gt;Ici je n'en extrairai que le nom de l'application/software et l'URL&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;de PHP ...&lt;/strong&gt;&lt;br&gt;
la version PHP donne ceci avec un coup de DOMXPath :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;Load(&amp;#39;ConfigurationWrapper&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;$xpath  = new DOMXPath($doc);&lt;/span&gt;

&lt;span class="x"&gt;$app = find_archive($xpath,$envName,&amp;#39;/applicationservers/applicationserver/applications/application&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;$soft = find_archive($xpath,$envName,&amp;#39;/softwares/software&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;function find_archive(DOMXPath $xpath, $envName, $queryPath) {&lt;/span&gt;
&lt;span class="x"&gt;    $query = &amp;#39;//environments/environment[@name=&amp;quot;&amp;#39;.$envName.&amp;#39;&amp;quot;]&amp;#39;.$queryPath;&lt;/span&gt;
&lt;span class="x"&gt;    $entries = $xpath-&amp;gt;query($query);&lt;/span&gt;
&lt;span class="x"&gt;    foreach ($entries as $entry) {&lt;/span&gt;
&lt;span class="x"&gt;        echo $entry-&amp;gt;getAttribute(&amp;#39;name&amp;#39;)  . &amp;#39; &amp;#39; . $entry-&amp;gt;getAttribute(&amp;#39;uri&amp;#39;) .&amp;quot;\n&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;affichera :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;app1 http://maven.intranet.mycompany.com/repository/my-app1.tar.gz
app2 http://maven.intranet.mycompany.com/repository/my-app2.tar.gz
My Oracle Upgrade http://maven.intranet.mycompany.com/repository/my-oracle-upgrade.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;... à Python&lt;/strong&gt;&lt;br&gt;
Le même process en Python avec cette fois ci le &lt;a href="http://lxml.de/tutorial.html"&gt;module
LXML&lt;/a&gt; donne ceci :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lxml&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;etree&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lxml.etree&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Element&lt;/span&gt;  

&lt;span class="n"&gt;autodeploy_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ConfigurationWrapper&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;my-environmentA&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_archive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;my_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;//environments/environment[@name=&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;env_name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;my_nodes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{name}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{uri}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;autodeploy_filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#get the name of the applications&lt;/span&gt;
&lt;span class="n"&gt;find_archive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/applicationservers/applicationserver/applications/application&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#get the name of the Software&lt;/span&gt;
&lt;span class="n"&gt;find_archive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/softwares/software&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;affichera :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;app1 http://maven.intranet.mycompany.com/repository/my-app1.tar.gz
app2 http://maven.intranet.mycompany.com/repository/my-app2.tar.gz
My Oracle Upgrade http://maven.intranet.mycompany.com/repository/my-oracle-upgrade.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Actuellement sur l'intranet j'ai une appli en
&lt;a href="http://www.jelix.org"&gt;Jelix&lt;/a&gt;, qui parcourt le XML (dans un cache) et
affiche tout le toutim aux end-user (consultants) pour leur permettre de
trouver ce qui est installé sur les environnements jEE ainsi que les
adresses des bases etc...&lt;/p&gt;
&lt;p&gt;Quand les consultants veulent que je livre un client avec une release
donnée, alors, à l'autre bout de la chaine j'ai un script Python &lt;em&gt;home
made&lt;/em&gt;, qui parcourt le même flux et me pond un livrable à partir d'un
fichier de configuration qui me décrit l'arbo cible et dépose chaque
targz dans cette dernière.&lt;/p&gt;
&lt;p&gt;D'ailleurs un billet est à venir sur la lecture de fichier de config en
PHP/Python, une histoire de &lt;em&gt;petite souris&lt;/em&gt; mais je n'en dirais pas plus
;)&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="python"></category></entry><entry><title>de PHP à Python : les tests unitaires</title><link href="https://foxmask.net/post/2013/02/12/de-php-a-python-les-tests-unitaires/" rel="alternate"></link><published>2013-02-12T10:00:00+01:00</published><updated>2013-02-12T10:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-02-12:/post/2013/02/12/de-php-a-python-les-tests-unitaires/</id><summary type="html">&lt;p&gt;Nouvel épisode de la série &lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;de PHP à
Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cette fois ci nous allons nous pencher sur l'incontournable outil du dev
voulant s'assurer la qualité de son code et de sa non régression : le
test unitaire.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tests Unitaires" src="http://blog.pagesd.info/public/ContactManagement/unit-testing.png"&gt;](http://blog.pagesd.info/public/ContactManagement/unit-testing.png)&lt;/p&gt;
&lt;p&gt;J'aborderai succinctement comment on s'y prend …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nouvel épisode de la série &lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;de PHP à
Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cette fois ci nous allons nous pencher sur l'incontournable outil du dev
voulant s'assurer la qualité de son code et de sa non régression : le
test unitaire.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tests Unitaires" src="http://blog.pagesd.info/public/ContactManagement/unit-testing.png"&gt;](http://blog.pagesd.info/public/ContactManagement/unit-testing.png)&lt;/p&gt;
&lt;p&gt;J'aborderai succinctement comment on s'y prend en PHP pour ensuite vous
montrer l'équivalent Python et finirai par d'autres moyens dont dispose
Python dans son arsenal.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;de PHP ...&lt;/strong&gt;&lt;br&gt;
Alors d'avance désolé, mais je ne vais pas aborder
&lt;a href="https://github.com/atoum" title="Atoum l'autre pays du test unitaire;)"&gt;Atoum&lt;/a&gt;,
quand bien même cela ne me déplairait pas :) Le but étant de montrer
comment en PHP on fait un test unitaire et retrouver une smilitude voire
carrement des ressemblances avec Python. Atoum n'existant pas dans une
version Pythonesque, ca sera donc PHPUnit puisque de ce coté là, un
pendant Python existe ;)&lt;/p&gt;
&lt;p&gt;Donc &lt;a href="https://fr.wikipedia.org/wiki/PHPUnit"&gt;PHPUnit&lt;/a&gt; est bien connu des
développeurs PHP et est donc un framework de tests unitaires dérivé de
JUnit (issue du monde Java)&lt;/p&gt;
&lt;p&gt;Voici donc un &lt;strong&gt;script
&lt;a href="https://raw.github.com/foxmask/de_php_a_python/les_tests_unitaires/test.php" title="télécharger les sources"&gt;test.php&lt;/a&gt;&lt;/strong&gt;
contenant ce qui suit :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;cal = new Calc();&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    public function testMoyenne() {&lt;/span&gt;
&lt;span class="x"&gt;        $this-&amp;gt;assertEquals($this-&amp;gt;cal-&amp;gt;moyenne(array(1,2,3)),2);&lt;/span&gt;
&lt;span class="x"&gt;        $this-&amp;gt;assertEquals($this-&amp;gt;cal-&amp;gt;moyenne(array(2,4,6)),4);&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;

&lt;span class="x"&gt;        public function testDivision() {    &lt;/span&gt;
&lt;span class="x"&gt;        $cal = new Calc();&lt;/span&gt;
&lt;span class="x"&gt;        $this-&amp;gt;assertEquals($this-&amp;gt;cal-&amp;gt;division(10,5),2);&lt;/span&gt;

&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.github.com/foxmask/de_php_a_python/les_tests_unitaires/calculs.php" title="télécharger les sources"&gt;calculs.php&lt;/a&gt;&lt;/strong&gt;
quant à lui contient :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;J&amp;#39;ai volontairement éluder la question de la division par zéro, on va le voir plus tard.&lt;/span&gt;
&lt;span class="x"&gt;le resultat du test donne ceci :&lt;/span&gt;

&lt;span class="x"&gt;phpunit test.php &lt;/span&gt;
&lt;span class="x"&gt;PHPUnit 3.4.14 by Sebastian Bergmann.&lt;/span&gt;
&lt;span class="x"&gt;..&lt;/span&gt;

&lt;span class="x"&gt;Time: 0 seconds, Memory: 6.50Mb&lt;/span&gt;

&lt;span class="x"&gt;OK (2 tests, 3 assertions)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Et "voilà" :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.... à Python&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;partie 1 : unittest&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Coté du fameux reptile, il s'agit de
"&lt;a href="http://docs.python.org/3/library/unittest.html"&gt;unittest&lt;/a&gt;" et est
également un framework de tests unitaires, dérivé du même JUnit - donc
on peut déjà se frotter les mains, l'acquis sur PHPUnit pour passer à
unittest devrait être le plus smoothy possible :)&lt;/p&gt;
&lt;p&gt;Petite définition en passant d'unittest, toute droit sortie de la doc :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Python unit testing framework, sometimes referred to as “PyUnit,”
is a Python language version of JUnit, by Kent Beck and Erich Gamma.
JUnit is, in turn, a Java version of Kent’s Smalltalk testing
framework. Each is the de facto standard unit testing framework for
its respective language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;voici
&lt;strong&gt;&lt;a href="https://raw.github.com/foxmask/de_php_a_python/les_tests_unitaires/test.py" title="télécharger les sources"&gt;test.py&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;calculs&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;moyenne&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;calculs&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;division&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CalculsTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;   

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_moyenne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;moyenne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;moyenne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_division&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;division&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;et
&lt;strong&gt;&lt;a href="https://raw.github.com/foxmask/de_php_a_python/les_tests_unitaires/calculs.py" title="télécharger les sources"&gt;calculs.py&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;moyenne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;division&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ce qui donne un fois lancé :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python test.py 
..
----------------------------------------------------------------------
Ran &lt;span class="m"&gt;2&lt;/span&gt; tests in &lt;span class="m"&gt;0&lt;/span&gt;.000s

OK
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Quant à la division par Zéro volontairement omise voici en Python
comment on la gère et la teste :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CalculsTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;   
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_division&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;division&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertRaises&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;ZeroDivisionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;division&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pour PHPUnit, on n'a semble-t-il toujours rien en magasin qui permette
de tester quelle méthode lève bien l'exception attendue, alors qu'&lt;a href="http://docs.atoum.org/en/chapter2.html#exception"&gt;Atoum
oui&lt;/a&gt; ;)&lt;/p&gt;
&lt;p&gt;une note finale, sur cette partie, pour rendre à césar le code Python
ici est entièrement extrait du livre de Tarek Ziadé "Python, Petit guide
à l'usage du développeur agile"&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Partie 2 : doctest&lt;/em&gt;&lt;br&gt;
A présent que nous avons vu les TU &lt;em&gt;unittest&lt;/em&gt;, Python possède une
seconde méthode de tests :
&lt;a href="http://docs.python.org/3/library/doctest.html"&gt;doctest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Comment fonctionne-t-elle ?&lt;/p&gt;
&lt;p&gt;Le module doctest, au lancement de la commande python, va scruter votre
code source à la recherche de texte ressemblant à un session python et
une fois trouvé, exécutera justement la session python.&lt;/p&gt;
&lt;p&gt;Exemple :
&lt;a href="https://raw.github.com/foxmask/de_php_a_python/les_tests_unitaires/mynameis.py" title="télécharger les sources"&gt;mynameis.py&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;&amp;gt;&amp;gt;&amp;gt; my_name_is(&amp;quot;foxmask&amp;quot;)&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;foxmask&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_name_is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;doctest&lt;/span&gt;
    &lt;span class="n"&gt;doctest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testmod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;pour tester on fera :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python mynameis.py
$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;rien s'affiche, donc pas d'erreur - bon voyons le mode verbose quand
même puisqu'on est curieux :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python mynameis.py  -v
Trying:
    my_name_is&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foxmask&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Expecting:
    &lt;span class="s1"&gt;&amp;#39;foxmask&amp;#39;&lt;/span&gt;
ok
&lt;span class="m"&gt;1&lt;/span&gt; items had no tests:
    __main__.my_name_is
&lt;span class="m"&gt;1&lt;/span&gt; items passed all tests:
   &lt;span class="m"&gt;1&lt;/span&gt; tests in __main__
&lt;span class="m"&gt;1&lt;/span&gt; tests in &lt;span class="m"&gt;2&lt;/span&gt; items.
&lt;span class="m"&gt;1&lt;/span&gt; passed and &lt;span class="m"&gt;0&lt;/span&gt; failed.
Test passed.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vous pourriez vous demander pourquoi faire 2 outils pour la même chose
finalement ?&lt;br&gt;
Doctest permet également de produire de la doc et les docstring comme
on les appelle permettent cela tout autant que de tester la non
régression de votre code qui aurait pu varié.&lt;/p&gt;
&lt;p&gt;D'aucuns diront (l'un d'eux se reconnaitra ;) que l'on n'a pas écrit le
code du test avant le code lui-même, mais l'inverse, et que donc doctest
vérifie le résultat de son exécution. Ce n'est pas faux mais ça fait
quand même son boulot ;)&lt;/p&gt;
&lt;p&gt;Il existe enfin une dernière méthode dite &lt;em&gt;DDD&lt;/em&gt; : le Développement
Dirigé par la Documentation. Je ne l'ai pas encore abordée et ne
pourrait vous en dire plus en détails, juste qu'elle existe.&lt;/p&gt;
&lt;p&gt;nota : &lt;a href="https://github.com/foxmask/de_php_a_python/tree/les_tests_unitaires"&gt;les sources de l'article sont sur
github&lt;/a&gt;;)&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="python"></category></entry><entry><title>HaveFnuBB sous le domaine exactement</title><link href="https://foxmask.net/post/2013/02/07/havefnubb-sous-le-domaine-exactement/" rel="alternate"></link><published>2013-02-07T11:26:00+01:00</published><updated>2013-02-07T11:26:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-02-07:/post/2013/02/07/havefnubb-sous-le-domaine-exactement/</id><summary type="html">&lt;p&gt;&lt;a href="/static/2011/04/havefnubb.png"&gt;&lt;img alt="havefnubb" src="/static/2011/04/havefnubb.png"&gt;&lt;/a&gt;
Amis lecteurs, vous savez que j'ai produit HaveFnuBB, ce projet de forum
opensource en PHP5 avec &lt;a href="http://jelix.org" title="PHP5 Framework"&gt;Jelix&lt;/a&gt;,
démarré en 2008, je vous en avais même parlé dans &lt;a href="/post/2012/12/29/havefnubb-en-2008-cetait-ca/" title="HaveFnuBB en 2008 c’était ça"&gt;un billet de retour
aux
sources&lt;/a&gt;
;)&lt;/p&gt;
&lt;p&gt;Alors nan le projet n'est pas mort, loin s'en faut, il dort un peu parce
que je …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="/static/2011/04/havefnubb.png"&gt;&lt;img alt="havefnubb" src="/static/2011/04/havefnubb.png"&gt;&lt;/a&gt;
Amis lecteurs, vous savez que j'ai produit HaveFnuBB, ce projet de forum
opensource en PHP5 avec &lt;a href="http://jelix.org" title="PHP5 Framework"&gt;Jelix&lt;/a&gt;,
démarré en 2008, je vous en avais même parlé dans &lt;a href="/post/2012/12/29/havefnubb-en-2008-cetait-ca/" title="HaveFnuBB en 2008 c’était ça"&gt;un billet de retour
aux
sources&lt;/a&gt;
;)&lt;/p&gt;
&lt;p&gt;Alors nan le projet n'est pas mort, loin s'en faut, il dort un peu parce
que je consacre mon temps à d'autres occupations.&lt;/p&gt;
&lt;p&gt;Cependant devant le trop grand nombre de posts ouverts sur le site du
projet, j'en ai déduit par ce dernier, qu'il est si stable et fiable que
personne n'a besoin de support à son sujet, et c'est tant mieux (héhé).&lt;/p&gt;
&lt;p&gt;Donc par conséquent, j'ai décidé de déménager le projet sur le sous
domaine &lt;a href="http://havefnubb.foxmask.info"&gt;http://havefnubb.foxmask.info&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tout s'y trouve à l'identique, site, forum, doc, fichiers de
téléchargement.&lt;/p&gt;
&lt;p&gt;Et comme d'hab' si vous avez envie de contribuer, le projet &lt;a href="https://github.com/havefnubb"&gt;havefnubb
sur github&lt;/a&gt; se trouve. Viendez tous forker
ensemble ;)&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="Jelix"></category></entry><entry><title>de PHP à Python : Gangnam Style</title><link href="https://foxmask.net/post/2013/02/04/gangam-style/" rel="alternate"></link><published>2013-02-04T10:00:00+01:00</published><updated>2013-02-04T10:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-02-04:/post/2013/02/04/gangam-style/</id><summary type="html">&lt;p&gt;"Gangnam Style" kézako : Bon en fait j'étais parti vous parler
sérieusement avec un titre &lt;em&gt;de PSR-1 à PEP8&lt;/em&gt; mais ca manquait de fun ;-)&lt;/p&gt;
&lt;p&gt;Donc le sujet du jour de la série "&lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;de PHP à
Python&lt;/a&gt;",
comme le laisse supposer (ceux qui connaissent) ces 2 'codes' PSR-1 &amp;amp;
PEP8 : les règles de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;"Gangnam Style" kézako : Bon en fait j'étais parti vous parler
sérieusement avec un titre &lt;em&gt;de PSR-1 à PEP8&lt;/em&gt; mais ca manquait de fun ;-)&lt;/p&gt;
&lt;p&gt;Donc le sujet du jour de la série "&lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;de PHP à
Python&lt;/a&gt;",
comme le laisse supposer (ceux qui connaissent) ces 2 'codes' PSR-1 &amp;amp;
PEP8 : les règles de coding dans chacun des 2 langages.&lt;br&gt;
Je me suis dit qu'après tout, on ne pouvait pas aborder le passage à
python sans en passer par les règles de "rédaction", donc voici.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;de PHP ...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pour PHP la définition de la
&lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md"&gt;PSR-1&lt;/a&gt;
est toute récente, et comme le rappelle
&lt;a href="http://blog.mageekbox.net/?post/2012/06/19/%C3%80-propos-de-PSR-0%2C-PSR-1-et-PSR-2"&gt;mageekguy&lt;/a&gt;,
celle ci est somme toute très subjective car cela n'empêchera personne
de coder comme il a toujours fait, et cette règle peut déranger les
habitudes de tout à chacun (moi le premier :) exemple de code :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;Pourquoi diable pour les fonctions les accolades sont à la ligne suivante et pas sur celle du if ?&lt;/span&gt;
&lt;span class="x"&gt;Perso, je les ai toujours TOUTES mises sur la même ligne, une habitude prise avec PERL :)&lt;/span&gt;
&lt;span class="x"&gt;... à Python &lt;/span&gt;
&lt;span class="x"&gt;La PEP8 quant à elle n&amp;#39;a que 12 ans ...&lt;/span&gt;
&lt;span class="x"&gt;Les accolades n&amp;#39;existent pas on met des &amp;quot;:&amp;quot; sur la même ligne que l&amp;#39;instruction et on indent de 4 espaces.&lt;/span&gt;
&lt;span class="x"&gt;Voici à quoi cela ressemble et on en discute après :&lt;/span&gt;


&lt;span class="x"&gt;#Use 4 spaces per indentation level.&lt;/span&gt;
&lt;span class="x"&gt;foo = long_function_name(var_one, var_two, var_three, var_four)&lt;/span&gt;

&lt;span class="x"&gt;def long_function_name(var_one, var_two, var_three, var_four):&lt;/span&gt;
&lt;span class="x"&gt;    print(var_one)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;on remarquera qu'en php on défini une fonction par le mot clé
"function", ici on utilisera "def"&lt;/p&gt;
&lt;p&gt;Le Python n'étant pas rigide en tout point, parfois "la queue" (ligne de
code) est un peu longue donc on la "retrousse" comme suit :  &lt;/p&gt;
&lt;p&gt;&lt;a href="/static/2013/01/Green-python-around-tree-1.jpg"&gt;&lt;img alt="Un python qui se fait tout petit" src="/static/2013/01/Green-python-around-tree-1-300x225.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Aligned with opening delimiter&lt;/span&gt;
&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;long_function_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var_one&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_two&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;var_three&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_four&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# More indentation included to distinguish this from the rest.&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;long_function_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;var_one&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_two&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_three&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;var_four&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var_one&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;C'est tout aussi lisible et l'indentation fait son office&lt;/p&gt;
&lt;p&gt;Alors certes cela peut perturber le développeur PHP au début, mais si
comme moi vous aimez que ca soit au carré vous vous y ferez super vite.&lt;/p&gt;
&lt;p&gt;La PEP8 définie également le nombre de lignes blanches entre 2 "def" ou
la taille maximum de caractères par ligne.&lt;/p&gt;
&lt;p&gt;Une autre règle importante concerne les imports.&lt;/p&gt;
&lt;p&gt;En PHP on n'ira pas écrire&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;use Customer, Order&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;mais bien&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;use Customer&lt;/span&gt;
&lt;span class="x"&gt;use Order&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En Python on n'écrira pas non plus&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;customer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;order&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;mais bien 2 imports distincts&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;customer&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;order&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;on retiendra que si la PEP8 n'est pas respectée, en exécutant votre
script python vous aurez droit à une belle erreur ;)&lt;/p&gt;
&lt;p&gt;PHP a coté est largement plus laxiste !&lt;/p&gt;
&lt;p&gt;Par exemple j'avais pris pour habitude d(e volontairement) écrire ce
genre de tru,c pour bien le repérer visuellement plus tard, et le
retirer quand j'avais fini de débogger :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;function bagnole_spec($voiture) {&lt;/span&gt;
&lt;span class="x"&gt;var_dump($voiture);&lt;/span&gt;
&lt;span class="x"&gt;   if ( in_array($voiture,&amp;#39;nb_portes&amp;#39;)) {&lt;/span&gt;
&lt;span class="x"&gt;       echo $voiture[&amp;#39;nb_portes&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt;   }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En python, aucun atermoiement n'est possible, on ne peut pas faire du
code crade même temporairement, ça doit pas dépasser. L'ordre de facto
on s'y fait, après tout le deboggage a sa place, autant ne pas le
négliger :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusion :&lt;/strong&gt;&lt;br&gt;
Bon évidement la PSR-1 ne se contente pas que de cela de même que la
PEP8 ne se borne pas à ces limitations/impositions de style.&lt;/p&gt;
&lt;p&gt;Se conformer aux règles a du bon dès le départ, bon sauf quand ça fait
plus de 10 piges qu'on crache du code et qu'on vous dit qu'il faut
changer ;)&lt;/p&gt;
&lt;p&gt;De toute façon avec des IDE modernes vous aurez tout loisir que ce
dernier vérifie que votre code colle aux exigences du langage.&lt;br&gt;
Par exemple avec Python et &lt;a href="http://www.aptana.com/"&gt;Aptana&lt;/a&gt; vous pouvez
ajouter les lib qui permettent à l'IDE de valider que votre code n'est
pas écrit de travers, l'une d'elle est
&lt;a href="http://www.logilab.org/857"&gt;pylint&lt;/a&gt;, ça donne cela :&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/2013/01/pep8.png"&gt;&lt;img alt="PEP8 avec Pylint dans Aptana" src="/static/2013/01/pep8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comme on voit là sur la ligne &lt;em&gt;return render&lt;/em&gt;, j'ai bien le droit de me
faire plaisir par quelques retours à la ligne alignés sur la parenthèse
ouvrante, quant à la ligne &lt;em&gt;logger.debug&lt;/em&gt; on la voit beaucoup trop
longue. Là python ne poussera pas le bouchon à nous invalider le code
pour "si peu".&lt;/p&gt;
&lt;p&gt;Pour en revenir à "Gangnam Style": avec les accolades à tirelarigot on a
vraiment l'impression d'avoir une posture de 'code' sur un canasson
(quand on code pas comme un bourrin ;) et coté Python, d'aucuns diront
qu'ils sont des poneys zailés ;)&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="python"></category></entry><entry><title>de PHP à Python : de composer à setuptools</title><link href="https://foxmask.net/post/2013/01/28/de-php-a-python-de-composer-a-setuptools/" rel="alternate"></link><published>2013-01-28T10:00:00+01:00</published><updated>2013-01-28T10:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-01-28:/post/2013/01/28/de-php-a-python-de-composer-a-setuptools/</id><summary type="html">&lt;p&gt;&lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;Comme introduit dans ce billet&lt;/a&gt;,
voici donc le premier billet de la série &lt;strong&gt;de PHP à Python&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gérer des dépendances à son projet ? il y a aussi une application pour
cela !&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;de PHP ...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cette application se nomme
&lt;a href="http://getcomposer.org/" title="Composer"&gt;Composer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Voici un extrait de la doc de Composer qui illustrera l'analogie qui …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="/post/2013/01/14/de-php-a-python-tous-ensemble/" title="de PHP à Python : tous ensemble"&gt;Comme introduit dans ce billet&lt;/a&gt;,
voici donc le premier billet de la série &lt;strong&gt;de PHP à Python&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gérer des dépendances à son projet ? il y a aussi une application pour
cela !&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;de PHP ...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cette application se nomme
&lt;a href="http://getcomposer.org/" title="Composer"&gt;Composer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Voici un extrait de la doc de Composer qui illustrera l'analogie qui
suit pour la version python&lt;/p&gt;
&lt;p&gt;Le fichier
&lt;strong&gt;&lt;a href="http://getcomposer.org/doc/00-intro.md#using-composer"&gt;composer.json&lt;/a&gt;&lt;/strong&gt;
est disponible en principe sur chacun des dépôts des projets qu'on peut
trouver sur github et packagist.&lt;/p&gt;
&lt;p&gt;C'est le fichier sur lequel tout repose.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.github.com/foxmask/de_php_a_python/de_composer_a_setuptools/composer.json" title="télécharger les sources"&gt;composer.json&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;    &amp;quot;repositories&amp;quot;: [&lt;/span&gt;
&lt;span class="x"&gt;        {&lt;/span&gt;
&lt;span class="x"&gt;            &amp;quot;type&amp;quot;: &amp;quot;package&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt;            &amp;quot;package&amp;quot;: {&lt;/span&gt;
&lt;span class="x"&gt;                &amp;quot;name&amp;quot;: &amp;quot;smarty/smarty&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt;                &amp;quot;version&amp;quot;: &amp;quot;3.1.7&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt;                &amp;quot;dist&amp;quot;: {&lt;/span&gt;
&lt;span class="x"&gt;                    &amp;quot;url&amp;quot;: &amp;quot;http://www.smarty.net/files/Smarty-3.1.7.zip&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt;                    &amp;quot;type&amp;quot;: &amp;quot;zip&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;                },&lt;/span&gt;
&lt;span class="x"&gt;                &amp;quot;source&amp;quot;: {&lt;/span&gt;
&lt;span class="x"&gt;                    &amp;quot;url&amp;quot;: &amp;quot;http://smarty-php.googlecode.com/svn/&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt;                    &amp;quot;type&amp;quot;: &amp;quot;svn&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt;                    &amp;quot;reference&amp;quot;: &amp;quot;tags/Smarty_3_1_7/distribution/&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;                },&lt;/span&gt;
&lt;span class="x"&gt;                &amp;quot;autoload&amp;quot;: {&lt;/span&gt;
&lt;span class="x"&gt;                    &amp;quot;classmap&amp;quot;: [&amp;quot;libs/&amp;quot;]&lt;/span&gt;
&lt;span class="x"&gt;                }&lt;/span&gt;
&lt;span class="x"&gt;            }&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;    ],&lt;/span&gt;
&lt;span class="x"&gt;    &amp;quot;require&amp;quot;: {&lt;/span&gt;
&lt;span class="x"&gt;        &amp;quot;smarty/smarty&amp;quot;: &amp;quot;3.1.*&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ici on comprendra qu'on s'est rajouté une dépendance sur smarty qui
n'est pas sur packagist mais sur un repository "privé".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;... à Python&lt;/strong&gt;
Cette application se nomme
&lt;a href="http://packages.python.org/distribute/setuptools.html"&gt;Setuptools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;L'homologue python sur lequel tout repose est le script
&lt;strong&gt;&lt;a href="https://raw.github.com/foxmask/de_php_a_python/de_composer_a_setuptools/setup.py" title="télécharger les sources"&gt;setup.py&lt;/a&gt;&lt;/strong&gt;
dont voici un exemple :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;find_packages&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fox_php_lib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Fox dessine un mouton&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foxmask&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;author_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;devnull@foxmask.info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/foxmask/fox_php_lib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;download_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/downloads/foxmask/fox_php_lib/fox_php_lib0.1.tar.gz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="n"&gt;classifiers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Development Status :: 4 - Beta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Environment :: Web Environment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Intended Audience :: Developers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;License :: OSI Approved :: BSD License&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Operating System :: OS Independent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Framework :: Django&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Topic :: Software Development :: Libraries :: Python Modules&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Topic :: Utilities&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ce setup permet (quasiment comme son homologue) :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;De décrire un module, une lib&lt;/li&gt;
&lt;li&gt;De télécharger l'archive, décrite au paramètre &lt;strong&gt;download_url&lt;/strong&gt;,
    via une commande particulière&lt;/li&gt;
&lt;li&gt;De télécharger les dépendances (lors de l'installation), décrite au
    paramètre &lt;strong&gt;packages&lt;/strong&gt; via une fonction find_packages() qui
    parcourira mon application et identifiera les dépendances et les
    installera&lt;/li&gt;
&lt;li&gt;les meta données
    &lt;strong&gt;name&lt;/strong&gt;,&lt;strong&gt;version&lt;/strong&gt;,&lt;strong&gt;description&lt;/strong&gt;,&lt;strong&gt;author&lt;/strong&gt;,&lt;strong&gt;author_email&lt;/strong&gt;,&lt;strong&gt;classifiers&lt;/strong&gt;,
    sont assez explicites pour savoir ce qu'on y met ;)&lt;/li&gt;
&lt;li&gt;De définir des &lt;strong&gt;classifiers&lt;/strong&gt; utiles pour retrouver et "ranger" ses
    contributions sur Pypi (cf plus bas)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comme on le voit sur la première ligne du script on a une ligne de code
python, plus tard on a la méthode find_packages(), donc oui on a toute
latitude d'utiliser du python pour "peupler" ses variables.&lt;/p&gt;
&lt;p&gt;A présent comment s'en servir ?&lt;/p&gt;
&lt;p&gt;on tape simplement :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python setup.py install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;qui installera votre lib/module/app comme attendue&lt;/p&gt;
&lt;p&gt;pour composer, on taperait :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;php composer.phar install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;w00t :)&lt;/p&gt;
&lt;p&gt;Une fois installée, on peut vérifier que la lib est dispo en tapant :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;foxmask&lt;/span&gt;&lt;span class="nd"&gt;@foxmask&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r266&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;84292&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dec&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux2&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fox_php_lib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;49.669036&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;ca&lt;/span&gt; &lt;span class="n"&gt;rox&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ce que fait cette lib est juste ce qui suit
(&lt;a href="https://raw.github.com/foxmask/de_php_a_python/de_composer_a_setuptools/test.py" title="télécharger les sources"&gt;test.py&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;python&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;] Python ca rox&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dans la foulée de la création de notre setup.py, on peut très
allégrement publier sa lib / son appli sur &lt;a href="http://pypi.python.org/pypi"&gt;Python Package Index aka
"Pypi"&lt;/a&gt;, mais cela pourra faire partie d'un
autre billet sur son utilisation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;presque le mot de la fin&lt;/strong&gt;
une dernière information quant à la publication de ce billet qui est
très largement inspiré du très bon article de &lt;a href="http://sametmax.com/creer-un-setup-py-et-mettre-sa-bibliotheque-python-en-ligne-sur-pypi/"&gt;sam &amp;amp; max : Créer un
setup et mettre sa lib python en
ligne&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;un dernier mot&lt;/strong&gt;
n'étant pas un utilisateur (même pas averti:P) de Composer, je me suis
basé sur la doc et l'aide précieuse
&lt;a href="https://twitter.com/armetiz"&gt;d'Artemiz&lt;/a&gt; pour son support à sa
compréhension ;)&lt;/p&gt;
&lt;p&gt;nota : &lt;a href="https://github.com/foxmask/de_php_a_python/tree/de_composer_a_setuptools"&gt;les sources de l'article sont disponibles sur
github&lt;/a&gt;&lt;/p&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="python"></category></entry><entry><title>de PHP à Python : tous ensemble</title><link href="https://foxmask.net/post/2013/01/14/de-php-a-python-tous-ensemble/" rel="alternate"></link><published>2013-01-14T17:40:00+01:00</published><updated>2013-01-14T17:40:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2013-01-14:/post/2013/01/14/de-php-a-python-tous-ensemble/</id><summary type="html">&lt;p&gt;Voici (venu le temps des rires et des chants dans l'ile aux enfants du
web c'est tous les jours le printemps, aheu 'scusez j'm'égare :) une
nouvelle série d'articles "de PHP à Python" qui voit le jour.&lt;/p&gt;
&lt;p&gt;Elle n'aura rien à voir avec une certaine émission de construction de
baraques en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Voici (venu le temps des rires et des chants dans l'ile aux enfants du
web c'est tous les jours le printemps, aheu 'scusez j'm'égare :) une
nouvelle série d'articles "de PHP à Python" qui voit le jour.&lt;/p&gt;
&lt;p&gt;Elle n'aura rien à voir avec une certaine émission de construction de
baraques en ruine pour familles en détresse... :P&lt;/p&gt;
&lt;p&gt;Celle ci va consister à illustrer et (tenter de) répondre à la question
"Comment fais tu ça en Python quand je fais ça en PHP ?"&lt;/p&gt;
&lt;p&gt;Encore une fois, ma grandeur d'âme aura eu raison de moi (ça sera ma
"tournée" pour mon cadeau d'anniversaire à chacun de vous en ce jour
béni des dieux du net ;) et c'est un nouveau défi sur IRC (sur un
channel PHP), qui est le résultat de ce billet et de ceux qui suivront.&lt;/p&gt;
&lt;p&gt;En voici les "termes" ;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dis moi, toi qui touche à python depuis un bon moment, ça te dis pas
de nous pondre un petit article comparatif avec PHP ?&lt;br&gt;
 genre les équivalents en python dans les grandes lignes&lt;br&gt;
 une sorte de how to switch to python&lt;br&gt;
 genre l'équivalent de composer, de phpunit, etc...&lt;br&gt;
 niveau code, par exemple l'équivalent de pdo, de simpleXml, etc...&lt;br&gt;
 donne nous envie de switcher ;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On retiendra tout de même une judicieuse remarque sur #python-fr à ma
question "connaissez-vous des articles pour montrer comment passer de
php à python ?"&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP et Python n'ont pas exactement la même utilité, donc à part dans
le cadre d'un projet précis, je vois mal comment se dire&lt;br&gt;
 "tiens, je vais passer de PHP à Python" \^\^&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Le niveau des billets risque de ne pas être pour le débutant en
programmation (forcément ;) mais si d'aventure vous le seriez en Python
vous pourriez me corriger ;)&lt;/p&gt;
&lt;p&gt;Je me lance bien que n'étant pas le moins du monde l'expert attitré dans
ces 2 langages, je pratique python depuis août 2012 et plus assidûment
depuis PyConFr 2012 (niveau noob++), et pour PHP je pratique depuis un
tout petit poil plus longtemps (niveau dev++/l33tmoinsmoins ;) mais
comme j'apprécie les 2 ( et ces temps ci plus l'un que l'autre parce que
je m'éclate ) je prends le risque et relève le gant ;)&lt;/p&gt;
&lt;p&gt;Donc le sujet pour cette série sera de montrer comment telle "opération"
en PHP se réalise en Python.&lt;/p&gt;
&lt;p&gt;Dans la bannette pour le moment il y aura :&lt;/p&gt;
&lt;p&gt;"En Python comment fais tu " :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;avec un Composer like ?&lt;/li&gt;
&lt;li&gt;PSR-1 like &lt;em&gt;(update 28/1)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Les String &lt;em&gt;(update 29/1)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;les Tests unitaires ?&lt;/li&gt;
&lt;li&gt;le Passage de paramètres au nombre variable ?&lt;/li&gt;
&lt;li&gt;les Arrays (&lt;a href="https://twitter.com/_vhf/status/299463653323849729"&gt;demandé via
    twitter&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;oui c'est cours (en fait c'était cours au départ mais depuis 1mois il
s'en est passé des choses) mais...&lt;/p&gt;
&lt;p&gt;... je vous propose de me coller en commentaire les sujets qu'ils vous
plairaient de voir abordés et je verrai "si je sais faire", de même, je
modifierai la liste ultérieurement en fonction de mes envies ;) et
surtout pour maintenir le liens avec les articles publiés après coup.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Déjà paru en "kioske" :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/post/2013/01/28/de-php-a-python-de-composer-a-setuptools/" title="de PHP à Python : de composer à setuptools"&gt;"de Composer à
    SetupTools"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/post/2013/02/04/gangam-style/" title="de PHP à Python : Gangnam Style"&gt;PSR-1
    like&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/post/2013/02/05/de-php-a-python-chaine-forme/" title="de PHP à Python : les chaines à fond la forme"&gt;Les
    String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/post/2013/02/11/shrek-passe-a-table/" title="de PHP à Python : Shrek passe à table"&gt;Shrek passe à
    table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/post/2013/02/12/de-php-a-python-les-tests-unitaires/" title="de PHP à Python : les tests unitaires"&gt;les Tests
    Unitaires&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;A paraître :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lecture de fichier de configuration&lt;/li&gt;
&lt;li&gt;Parser du XML&lt;/li&gt;
&lt;/ul&gt;</content><category term="Techno"></category><category term="ApacheMySqlPHP"></category><category term="python"></category></entry></feed>