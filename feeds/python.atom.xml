<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Le Free de la Passion - python</title><link href="https://foxmask.net/" rel="alternate"></link><link href="https://foxmask.net/feeds/python.atom.xml" rel="self"></link><id>https://foxmask.net/</id><updated>2018-01-23T16:45:00+01:00</updated><entry><title>Quand Fabric refuse de bosser</title><link href="https://foxmask.net/post/2018/01/23/quand-fabric-refuse-bosser/" rel="alternate"></link><published>2018-01-23T16:45:00+01:00</published><updated>2018-01-23T16:45:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2018-01-23:/post/2018/01/23/quand-fabric-refuse-bosser/</id><summary type="html">&lt;p&gt;Un comportement completement fou se produit pour moi avec Fabric, il n'execute absolument pas une &lt;code&gt;command&lt;/code&gt; (run ici) en se faisant jetter par le serveur où il devrait executer celle ci...&lt;/p&gt;
&lt;p&gt;Je pose ça là vite fait pour qui rencontrerait le problème à son tour&lt;/p&gt;
&lt;p&gt;J'ai un script, le plus …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Un comportement completement fou se produit pour moi avec Fabric, il n'execute absolument pas une &lt;code&gt;command&lt;/code&gt; (run ici) en se faisant jetter par le serveur où il devrait executer celle ci...&lt;/p&gt;
&lt;p&gt;Je pose ça là vite fait pour qui rencontrerait le problème à son tour&lt;/p&gt;
&lt;p&gt;J'ai un script, le plus con du monde qui execute la commande id sur le serveur de mon choix, comme suit :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fabric.api&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fabric.colors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yellow&lt;/span&gt;

&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;the_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;new_f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[{0}] {1}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__doc__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new_f&lt;/span&gt;


&lt;span class="nd"&gt;@the_log&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;This is my main function that will triggers anything&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;warn_only&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;combine_stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Quand ce script tourne il fait :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;foxmask:~/DjangoVirtualEnv/monitoring/monitoring&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;monitoring&lt;span class="o"&gt;]&lt;/span&gt; $ fab main:server&lt;span class="o"&gt;=&lt;/span&gt;server1 -H server1
&lt;span class="o"&gt;[&lt;/span&gt;server1&lt;span class="o"&gt;]&lt;/span&gt; Executing task &lt;span class="s1"&gt;&amp;#39;main&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;server1&lt;span class="o"&gt;]&lt;/span&gt; This is my main &lt;span class="k"&gt;function&lt;/span&gt; that will triggers anything
&lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt; local: id
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;foxmask&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;foxmask&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;groupes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;foxmask&lt;span class="o"&gt;)&lt;/span&gt;,24&lt;span class="o"&gt;(&lt;/span&gt;cdrom&lt;span class="o"&gt;)&lt;/span&gt;,25&lt;span class="o"&gt;(&lt;/span&gt;floppy&lt;span class="o"&gt;)&lt;/span&gt;,29&lt;span class="o"&gt;(&lt;/span&gt;audio&lt;span class="o"&gt;)&lt;/span&gt;,30&lt;span class="o"&gt;(&lt;/span&gt;dip&lt;span class="o"&gt;)&lt;/span&gt;,44&lt;span class="o"&gt;(&lt;/span&gt;video&lt;span class="o"&gt;)&lt;/span&gt;,46&lt;span class="o"&gt;(&lt;/span&gt;plugdev&lt;span class="o"&gt;)&lt;/span&gt;,100&lt;span class="o"&gt;(&lt;/span&gt;users&lt;span class="o"&gt;)&lt;/span&gt;,103&lt;span class="o"&gt;(&lt;/span&gt;scanner&lt;span class="o"&gt;)&lt;/span&gt;,112&lt;span class="o"&gt;(&lt;/span&gt;netdev&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;server1&lt;span class="o"&gt;]&lt;/span&gt; run: id
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;on voit le resultat des 2 commandes... la seconde ne fonctionne pas et pourtant un ssh passe lui&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh root@server1 id
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;groupes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;après avoir écrèmé la toile à la recherche de config SSH que j'aurai raté, je testé le meme script sur un serveur. 
Et la entre serveurs tout passe.
La difference avec ma station, OpenSSH 7.1 vs OpenSSH 5.3
Donc me dis que c'est quand même gonflé qu'une diff d'openssh me mette dedans
Je mets à jour OpenSSH sur la Redhat mais j'arrive tout juste à la 5.3.13.&lt;/p&gt;
&lt;p&gt;Je mets du PDB partout pour voir qu'est-ce qui n'irait pas.
Et je tombe sur cette page &lt;a href="http://www.fabfile.org/troubleshooting.html?highlight=ssh"&gt;http://www.fabfile.org/troubleshooting.html?highlight=ssh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Où je fais un bon copier coller du code sous le paragraphe "Enable Paramiko-level debug logging"
Et là à l'execution ca donne :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;foxmask:~/DjangoVirtualEnv/monitoring/monitoring&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;monitoring&lt;span class="o"&gt;]&lt;/span&gt; $ fab -f main main:server&lt;span class="o"&gt;=&lt;/span&gt;server1 -H server1 -p pass1
&lt;span class="o"&gt;[&lt;/span&gt;server1&lt;span class="o"&gt;]&lt;/span&gt; Executing task &lt;span class="s1"&gt;&amp;#39;main&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;server1&lt;span class="o"&gt;]&lt;/span&gt; This is my main &lt;span class="k"&gt;function&lt;/span&gt; that will triggers anything
&lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt; local: id
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;foxmask&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;foxmask&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;groupes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;foxmask&lt;span class="o"&gt;)&lt;/span&gt;,24&lt;span class="o"&gt;(&lt;/span&gt;cdrom&lt;span class="o"&gt;)&lt;/span&gt;,25&lt;span class="o"&gt;(&lt;/span&gt;floppy&lt;span class="o"&gt;)&lt;/span&gt;,29&lt;span class="o"&gt;(&lt;/span&gt;audio&lt;span class="o"&gt;)&lt;/span&gt;,30&lt;span class="o"&gt;(&lt;/span&gt;dip&lt;span class="o"&gt;)&lt;/span&gt;,44&lt;span class="o"&gt;(&lt;/span&gt;video&lt;span class="o"&gt;)&lt;/span&gt;,46&lt;span class="o"&gt;(&lt;/span&gt;plugdev&lt;span class="o"&gt;)&lt;/span&gt;,100&lt;span class="o"&gt;(&lt;/span&gt;users&lt;span class="o"&gt;)&lt;/span&gt;,103&lt;span class="o"&gt;(&lt;/span&gt;scanner&lt;span class="o"&gt;)&lt;/span&gt;,112&lt;span class="o"&gt;(&lt;/span&gt;netdev&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;server1&lt;span class="o"&gt;]&lt;/span&gt; run: id
DEBUG:paramiko.transport:starting thread &lt;span class="o"&gt;(&lt;/span&gt;client mode&lt;span class="o"&gt;)&lt;/span&gt;: 0x66aed748
DEBUG:paramiko.transport:Local version/idstring: SSH-2.0-paramiko_2.4.0
DEBUG:paramiko.transport:Remote version/idstring: SSH-2.0-OpenSSH_5.3
INFO:paramiko.transport:Connected &lt;span class="o"&gt;(&lt;/span&gt;version &lt;span class="m"&gt;2&lt;/span&gt;.0, client OpenSSH_5.3&lt;span class="o"&gt;)&lt;/span&gt;
DEBUG:paramiko.transport:kex algos:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;diffie-hellman-group-exchange-sha256&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;diffie-hellman-group-exchange-sha1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;diffie-hellman-group14-sha1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;diffie-hellman-group1-sha1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; server key:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh-rsa&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;ssh-dss&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; client encrypt:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;aes128-ctr&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes192-ctr&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes256-ctr&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;arcfour256&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;arcfour128&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes128-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;3des-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;blowfish-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;cast128-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes192-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes256-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;arcfour&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;rijndael-cbc@lysator.liu.se&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; server encrypt:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;aes128-ctr&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes192-ctr&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes256-ctr&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;arcfour256&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;arcfour128&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes128-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;3des-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;blowfish-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;cast128-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes192-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;aes256-cbc&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;arcfour&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;rijndael-cbc@lysator.liu.se&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; client mac:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hmac-md5&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-sha1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;umac-64@openssh.com&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-sha2-256&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-sha2-512&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-ripemd160&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-ripemd160@openssh.com&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-sha1-96&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-md5-96&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; server mac:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hmac-md5&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-sha1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;umac-64@openssh.com&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-sha2-256&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-sha2-512&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-ripemd160&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-ripemd160@openssh.com&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-sha1-96&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;hmac-md5-96&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; client compress:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;zlib@openssh.com&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; server compress:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;zlib@openssh.com&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; client lang:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; server lang:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; kex follows?False
DEBUG:paramiko.transport:Kex agreed: diffie-hellman-group-exchange-sha256
DEBUG:paramiko.transport:HostKey agreed: ssh-rsa
DEBUG:paramiko.transport:Cipher agreed: aes128-ctr
DEBUG:paramiko.transport:MAC agreed: hmac-sha2-256
DEBUG:paramiko.transport:Compression agreed: none
DEBUG:paramiko.transport:Got server p &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2048&lt;/span&gt; bits&lt;span class="o"&gt;)&lt;/span&gt;
DEBUG:paramiko.transport:kex engine KexGexSHA256 specified hash_algo &amp;lt;built-in &lt;span class="k"&gt;function&lt;/span&gt; openssl_sha256&amp;gt;
DEBUG:paramiko.transport:Switch to new keys ...
DEBUG:paramiko.transport:Trying discovered key b&lt;span class="s1"&gt;&amp;#39;8fbb1c6beb76bcc6767eccfcbef3730e&amp;#39;&lt;/span&gt; in /home/foxmask/.ssh/id_rsa
DEBUG:paramiko.transport:userauth is OK
INFO:paramiko.transport:Authentication &lt;span class="o"&gt;(&lt;/span&gt;publickey&lt;span class="o"&gt;)&lt;/span&gt; failed.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;du coup me v'la frais avec un paramiko qui met son caca en trouvant bien que l'userauth est ok mais pas la publickey. Ca te ferait mal de me laisser passer puisque tu as vu que le user/pass etait ok ?&lt;/p&gt;
&lt;p&gt;Etape suivante, trouver comment forcer &lt;a href="https://serverfault.com/questions/283722/authentication-order-with-ssh"&gt;SSH à utiliser le mot de passe et basta&lt;/a&gt; ... &lt;/p&gt;
&lt;p&gt;Je n'ai pas encore mis la main sur une solution , je mettrai à jour si j'en trouve une d'ici là :)&lt;/p&gt;
&lt;p&gt;@Tchao :)&lt;/p&gt;</content><category term="python"></category><category term="Fabric"></category></entry><entry><title>2017 at a glance</title><link href="https://foxmask.net/post/2017/12/21/2017-at-a-glance/" rel="alternate"></link><published>2017-12-21T20:00:00+01:00</published><updated>2017-12-21T20:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2017-12-21:/post/2017/12/21/2017-at-a-glance/</id><summary type="html">&lt;h1&gt;2017 a special year&lt;/h1&gt;
&lt;p&gt;this year was plenty of differents and rich activities from differents aspects&lt;/p&gt;
&lt;h2&gt;OpenSource activities&lt;/h2&gt;
&lt;p&gt;In 2015 my github activity concerned 90 contributions where in 2016 I increased by 400%, and finally by 50% more in 2017.&lt;/p&gt;
&lt;p&gt;During this year, I published 7 releases for the project …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;2017 a special year&lt;/h1&gt;
&lt;p&gt;this year was plenty of differents and rich activities from differents aspects&lt;/p&gt;
&lt;h2&gt;OpenSource activities&lt;/h2&gt;
&lt;p&gt;In 2015 my github activity concerned 90 contributions where in 2016 I increased by 400%, and finally by 50% more in 2017.&lt;/p&gt;
&lt;p&gt;During this year, I published 7 releases for the project TriggerHappy, from 1.3.0 to 1.5.2. &lt;/p&gt;
&lt;h3&gt;New ideas, new needs&lt;/h3&gt;
&lt;p&gt;I started a new project with VueJS and Django to produce an a11y editor, with OpenDyslexia font, speech2text and text2speech.&lt;/p&gt;
&lt;p&gt;I could quickly make something simple that works perfectly, but not for speech2text/text2speech where I still don't know how I could manage that part.&lt;/p&gt;
&lt;p&gt;That project allowed me to discover a new world between VueJS and DRF. That was a real pleasure. &lt;/p&gt;
&lt;p&gt;Now VueJS has progressed a lot, and other projects to bootstrap Django project with VueJS have been created to simplify everything, every steps, of the integration.&lt;/p&gt;
&lt;h3&gt;Hacktoberfest (october 2017)&lt;/h3&gt;
&lt;p&gt;An event that allows to meet dev arround the Trigger Happy project with the issues I opened and with other projects I submitted PR like Twython, Requests, Mastodon.py, Cozy-debian, Dropbox Paper, Django Channels and so on.&lt;/p&gt;
&lt;p&gt;At the end of the month I released a special "Hacktoberfest version 1.5.0" to thank every contributors.&lt;/p&gt;
&lt;h3&gt;Meetup&lt;/h3&gt;
&lt;p&gt;I went to just two meetups this year, the Django Paris meetup in september, and one about VueJS/NextJS early this year. I hope to be able to go and see more of them next year.&lt;/p&gt;
&lt;h3&gt;Donation&lt;/h3&gt;
&lt;p&gt;As there are projects where I can't contribute, I make donations instead. This year was for Django Rest Framework.
This is a really great project that is so powerful in its simplicity, and managed by really nice guys.&lt;/p&gt;
&lt;h3&gt;PSF Member&lt;/h3&gt;
&lt;p&gt;I joined the &lt;a href="http://pyfound.blogspot.fr/"&gt;PSF&lt;/a&gt; also, and i'm now a &lt;a href="https://www.python.org/users/foxmask/"&gt;PSF member&lt;/a&gt; in the middle of the armada of all the talented developers.
We feel to be part of something bigger than us, and at the same time, a little grain of dust in the Python galaxy ;)&lt;/p&gt;
&lt;h2&gt;Journée des Femmes (march 2017)&lt;/h2&gt;
&lt;p&gt;A special day, where I offered the place of my blog, for women I knew, to publish articles on any subjects.&lt;/p&gt;
&lt;h1&gt;2018, End and Conclusion&lt;/h1&gt;
&lt;p&gt;Each year, when you are a lonly developer, there are a lot of moments where you don't have the mood to dive into anything, and moments where you are very motivated and ready to redo the world. Thus, I have many ideas about my main project for the next year, and i'd be glad to exchange with future contributors.&lt;/p&gt;
&lt;p&gt;Finally, 2018 will be the year of my 20 years of contributions in the OpenSource world. &lt;/p&gt;
&lt;p&gt;I will post about the path I followed since then, that cuold be fun to have a look at of thoses years :)&lt;/p&gt;
&lt;p&gt;I wish you the best for the celebretion of Christmas&lt;/p&gt;</content><category term="python"></category></entry><entry><title>Coverage, install, upload results</title><link href="https://foxmask.net/post/2017/10/14/coverage-install-upload-results/" rel="alternate"></link><published>2017-10-14T17:00:00+02:00</published><updated>2017-10-14T17:00:00+02:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2017-10-14:/post/2017/10/14/coverage-install-upload-results/</id><summary type="html">&lt;p&gt;Creating coverage report, I put that here, as a reminder for a later use.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Installation of Coverage&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;coverage&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;running on a django project :&lt;/p&gt;
&lt;h1&gt;Running coverage&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;coverage&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;  &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v2&lt;/span&gt;
&lt;span class="n"&gt;coverage&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="n"&gt;coverage&lt;/span&gt; &lt;span class="n"&gt;report&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Publishing the results with covveralls.io&lt;/h1&gt;
&lt;p&gt;On https://coveralls.io/github/foxmask/django-th get the token, then install&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;coveralls&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now the command &lt;code&gt;coveralls&lt;/code&gt; is available&lt;/p&gt;
&lt;p&gt;As I don't use Travis (but not in pro) and don't have private repo, I don't put the token in a .coveralls.yml at all, so to share the result we use the command line :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;COVERALLS_REPO_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_the_long_string_of_the_token&lt;/span&gt; &lt;span class="n"&gt;coveralls&lt;/span&gt;
&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;coveralls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;coveralls&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Job ##1.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://coveralls.io/jobs/30251510&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you go back to coveralls.io, you will find the job and the result of the coverage&lt;/p&gt;
&lt;p&gt;Then add the following to your README.rst (for example) &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;image&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; https://coveralls.io/repos/github/foxmask/django-th/badge.svg
    &lt;span class="nc"&gt;:target:&lt;/span&gt; &lt;span class="nf"&gt;https://coveralls.io/github/foxmask/django-th&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;End&lt;/h1&gt;
&lt;p&gt;Ready to go !&lt;/p&gt;</content><category term="test"></category><category term="coverage"></category><category term="python"></category></entry><entry><title>Fabric, et la contrib django pour acceder à tous vos joujoux</title><link href="https://foxmask.net/post/2017/07/10/fabric-contrib-django/" rel="alternate"></link><published>2017-07-10T14:00:00+02:00</published><updated>2017-07-10T14:00:00+02:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2017-07-10:/post/2017/07/10/fabric-contrib-django/</id><summary type="html">&lt;p&gt;Dans mon &lt;a href="https://foxmask.trigger-happy.eu/post/2017/07/06/fabric-sa-var-env-nos-variables-dynamiques"&gt;billet précédent&lt;/a&gt;, j'évoquais l'existence d'une "contrib" Fabric pour intégrer Django au sein de ses tasks Fabric, mais qu'elle déconnait...&lt;/p&gt;
&lt;p&gt;Après maints tests supplementaires et digging ze toile, j'ai entrevu la lumière après la lecture de 3 issues chez Fabric &lt;a href="https://github.com/fabric/fabric/issues/1509"&gt;#1509&lt;/a&gt;, &lt;a href="https://github.com/fabric/fabric/issues/1033"&gt;#1033&lt;/a&gt;, &lt;a href="https://github.com/fabric/fabric/issues/1207"&gt;#1207&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tout compulsé ca donne ceci :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Dans mon &lt;a href="https://foxmask.trigger-happy.eu/post/2017/07/06/fabric-sa-var-env-nos-variables-dynamiques"&gt;billet précédent&lt;/a&gt;, j'évoquais l'existence d'une "contrib" Fabric pour intégrer Django au sein de ses tasks Fabric, mais qu'elle déconnait...&lt;/p&gt;
&lt;p&gt;Après maints tests supplementaires et digging ze toile, j'ai entrevu la lumière après la lecture de 3 issues chez Fabric &lt;a href="https://github.com/fabric/fabric/issues/1509"&gt;#1509&lt;/a&gt;, &lt;a href="https://github.com/fabric/fabric/issues/1033"&gt;#1033&lt;/a&gt;, &lt;a href="https://github.com/fabric/fabric/issues/1207"&gt;#1207&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tout compulsé ca donne ceci :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="c1"&gt;# ajout du chemin où se trouve projetA&lt;/span&gt;
&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;../../projeta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# appel de la librairie django de Fabric pour appeler les objets Django&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fabric.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;
&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;projeta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# import de django&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt;
&lt;span class="c1"&gt;# setup django&lt;/span&gt;
&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# appel du model&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;projeta.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MonModel&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MonModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foobar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;execution&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ fab main

foobar

Done.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ceci fonctionne (pour un vhost) si vous avez collé votre appli "fabric" dans le même dossier que celui du projet Django, sinon adapter la ligne &lt;strong&gt;path =&lt;/strong&gt; pour que ca match votre env&lt;/p&gt;</content><category term="python"></category><category term="Fabric"></category><category term="django"></category></entry><entry><title>Fabric, sa var 'env' et nos variables dynamiques !</title><link href="https://foxmask.net/post/2017/07/06/fabric-sa-var-env-nos-variables-dynamiques/" rel="alternate"></link><published>2017-07-06T20:00:00+02:00</published><updated>2017-07-06T20:00:00+02:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2017-07-06:/post/2017/07/06/fabric-sa-var-env-nos-variables-dynamiques/</id><summary type="html">&lt;p&gt;Fabric est un sérieux concurrent face à ansible, quoiqu'on en pense.&lt;/p&gt;
&lt;h1&gt;Intro :&lt;/h1&gt;
&lt;p&gt;J'ai eu à faire à &lt;a href="https://www.ansible.com/"&gt;ansible&lt;/a&gt; pendant plus d'un an pour automatiser des installations d'applications java sur tous les types de serveur d'applications du marché.
Mais comme à mon habitude, je n'utilise pas des outils de DevOps pour …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Fabric est un sérieux concurrent face à ansible, quoiqu'on en pense.&lt;/p&gt;
&lt;h1&gt;Intro :&lt;/h1&gt;
&lt;p&gt;J'ai eu à faire à &lt;a href="https://www.ansible.com/"&gt;ansible&lt;/a&gt; pendant plus d'un an pour automatiser des installations d'applications java sur tous les types de serveur d'applications du marché.
Mais comme à mon habitude, je n'utilise pas des outils de DevOps pour ce qu'ils ont été conçus dès le départ, à savoir, répéter la même operation sur plusieurs hosts à la fois.
Non, j'ai vu dans ansible, la possibilité d'automatiser toujours la même opération sur UN serveur et UN seul à la fois. 
En effet, les environnements jEE en entreprise sont du genre "production", "test", "developpement", et évidement, on ne va pas s'amuser à deployer la version de dev automatiquement en test et en prod.
Donc on a 3 environnements par client, chacun vivant sa vie, comme chacun peut l'imaginer. Les corrections de bug de prod dans un coin, les évol en cours sur l'env de test etc...
Du coup on voit bien que l'industrialisation "classique" des DevOps, consistant à installer 'n' fois un service sur 'n' serveurs, ne colle pas du tout au "métier".&lt;/p&gt;
&lt;h1&gt;Ansible at first&lt;/h1&gt;
&lt;p&gt;Avec ansible tout se passait pour le mieux, mais arriva un moment où, les serveurs unix devenaient retord et ansible n'accrochait plus ces derniers correctement. 
Plus de retour des tâches habituellement exécutées, tantôt stuck, tantôt plantées, mais trop souvent, restées dans le flou avec une question récurrente : "mais où ca en est ?"
Alors sont en cause les serveurs eux mêmes puisque surchargés et RAM faible, mais à ce moment là je m'attendais à un minumum de reaction de ansible pour quand même "revenir" au serveur déclencheur du playbook et s'arrêter proprement.&lt;/p&gt;
&lt;p&gt;Donc las de cette situation, j'ai réécrit tous mon playbook et roles ansible en 5 modules python avec fabric en lieu et place.&lt;/p&gt;
&lt;h1&gt;Fabric :&lt;/h1&gt;
&lt;p&gt;avec ansible, il est possible de fournir un fichier JSON contenant des extra-vars. Très pratique pour moi, pour fournir à ansible, dynamiquement, le nom du serveur et les URL des applications java à recuperer pour les deplooyer ensuite.&lt;/p&gt;
&lt;p&gt;avec &lt;a href="http://docs.fabfile.org/en/1.13/index.html"&gt;fabric&lt;/a&gt;, je fis un petit wrapper qui me permet de passer du JSON en un fichier settings à la django dynamiquement. Par contre, j'oubliais que comme 'n' users pouvaient utiliser mon appli Django pour déclencher les installations, tout allaient écrire dans le même fichier settings ... 
Donc en creusant comme avoir aussi avec Fabric un fichier d'extra-vars, je n'ai rien trouvé de meiux que de peupler la variable env de Fabric avec ma propre sauce.
Vous pourriez objecter que c'est une grosse connerie parce que je vais me mélanger les crayons avec les variables de Fabric, mais que néni, mes variables sont toutes en MAJUSCULE, ce qui n'est pas la cas de Fabric.&lt;/p&gt;
&lt;p&gt;Donc &lt;strong&gt;env.user&lt;/strong&gt; et &lt;strong&gt;env.password&lt;/strong&gt; ne seront pas écrasées par mes &lt;strong&gt;env.ENV_USER&lt;/strong&gt; et &lt;strong&gt;env.PASSWORD&lt;/strong&gt; par exemple.&lt;/p&gt;
&lt;p&gt;Donc pour obtenir une fonctiionnalité équivalente de extra-var de Ansible avec Fabric, on spécifiera sur la ligne de commande l'option "-c" pour que Fabric aille chercher le fichier RC, qui lui, contiendra le même contenu que le fichier settings sus-mentionné.&lt;/p&gt;
&lt;p&gt;Ainsi 'n' users ne se marcheront plus sur les pieds.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dernière subtilité donnée dans la doc&lt;/strong&gt; :&lt;/p&gt;
&lt;p&gt;les fichiers RC sont lus comme suit :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;CLE_A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;valeur&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;où valeur sera retournée sous la valeur : 'valeur'&lt;/p&gt;
&lt;p&gt;si valeur est un path ca donnera '/mon/path/'
ce qui est la chianli quand on fait un os.path.join(env.CLE_A, 'sous_dossier')  puisqu'on obtiendra comme valeur : '/mon/path/'/sous_dossier&lt;/p&gt;
&lt;p&gt;de même pour mon &lt;strong&gt;env.ENV_USER&lt;/strong&gt; qui a pour valeur 'foxmask' ; quand je fais un &lt;strong&gt;sudo(cmd, user=env.ENV_USER)&lt;/strong&gt; j'ai droit à un manignifique &lt;strong&gt;"sudo user 'foxmask' n'existe pas"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;de même pour un dict &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;CLE_B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;truc_machin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bidule&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;sera retourné sous une la forme d'une string&lt;/p&gt;
&lt;p&gt;du coup on le voit on se fait bien enfumer&lt;/p&gt;
&lt;p&gt;Pour régler son compte à ce comportement, reste à se faire une petite méthode pour épurer les valeurs de ses propres variables, avec un coup de &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MAVARIABLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MAVARIABLE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;là où c'est nécéssaire et appeler ladite méthode dans les modules où on utilise "env" :P&lt;/p&gt;
&lt;p&gt;Et pour la cas du dict, il faudra passer par le module "&lt;a href="https://docs.python.org/3/library/ast.html?highlight=ast#module-ast"&gt;ast&lt;/a&gt;" pour revenir à un "dict" nomal, like this &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cle_b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;literal_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CLE_B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;et on pourra retourner faire joujou avec son dict comme d'hab&lt;/p&gt;
&lt;h2&gt;&lt;a href="http://docs.fabfile.org/en/1.13/api/contrib/django.html"&gt;Fabric and Django integration&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Un moment j'ai cru voir une lueur d'espoir avec cette contribution qui permettrait d'accéder à "ses affaires" made in Django, depuis Fabric, genre au pif les données du modèle que j'injecte en JSON à la volée et récupère dans &lt;strong&gt;env.MES_VARIABLES_A_LA_NOIX&lt;/strong&gt; mais, j'ai vite déchanté avec un erreur on ne peut plus bateau :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ModuleNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;monmodule&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Conclusion :&lt;/h1&gt;
&lt;p&gt;Voila voilo pour une billet fait rapidos sur des utilisations completements détournées du but premier :)&lt;/p&gt;</content><category term="python"></category><category term="Fabric"></category></entry><entry><title>Orotangi, your thoughts everywhere</title><link href="https://foxmask.net/post/2017/02/09/orotangi/" rel="alternate"></link><published>2017-02-09T09:00:00+01:00</published><updated>2017-02-09T09:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2017-02-09:/post/2017/02/09/orotangi/</id><summary type="html">&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;If you heard about Evernote and its little slap it got, at the end of november 2016, from the users community (because of the changes of the policy related to our own notebooks), you will then now understand what the purpose of that project.&lt;/p&gt;
&lt;p&gt;Orotangi is your own private …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;If you heard about Evernote and its little slap it got, at the end of november 2016, from the users community (because of the changes of the policy related to our own notebooks), you will then now understand what the purpose of that project.&lt;/p&gt;
&lt;p&gt;Orotangi is your own private notebook where you will store your thoughts and access them from anywhere.&lt;/p&gt;
&lt;h1&gt;Goals&lt;/h1&gt;
&lt;p&gt;Once again, as I already said, when something bother me, I build something else by myself.&lt;/p&gt;
&lt;p&gt;I already made or use the following open source a clone of :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IFTTT with &lt;a href="https://trigger-happy.eu"&gt;Trigger-Happy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pocket with &lt;a href="https://wallabag.org"&gt;Wallabag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and now I start to make an open source clone of Evernote with Orotangi.&lt;/p&gt;
&lt;p&gt;Yes, that's the toolbox I use to organize my everyday life :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;settings reminder for rendez-vous &lt;/li&gt;
&lt;li&gt;grabbing news to be read later&lt;/li&gt;
&lt;li&gt;write a meeting report&lt;/li&gt;
&lt;li&gt;put thoughts of projects &lt;/li&gt;
&lt;li&gt;and so on&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Where is the project ?&lt;/h1&gt;
&lt;p&gt;As I started at the end of january, it's absolutly not usable at all but I launched the project on github, in two pieces : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/orotangi"&gt;the back&lt;/a&gt; with &lt;a href="http://www.django-rest-framework.org/"&gt;Django Rest Framework&lt;/a&gt; and &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/orotangi-front"&gt;the front&lt;/a&gt; with &lt;a href="https://vuejs.org"&gt;Vue.js&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Why that one ?&lt;/h1&gt;
&lt;p&gt;In my Freedom quest, as usual, I don't do anything to make project better than the original ones, I make them, because I need it first of all, and to feel well in my shoes :P &lt;/p&gt;
&lt;p&gt;By "well in my shoes", I mean disposing of my life with tools that are not the property of a company that could spy what I do with their services.&lt;/p&gt;
&lt;p&gt;By "could spy", I mean a company that could decide by itself to read our personal data or track the things we do with our data, or the Government of those companies which could bend each of them, to grab our own personnal data and control our life.&lt;/p&gt;
&lt;p&gt;Yes, I know, you could say, "go on and make an opensource clone of gmail, facebook". But in fact, I do things by myself when I don't have the choice, and for those "services", I can switch from gmail to my hosting provider tomorrow, it's not a big deal for myself as I'd already done that for the account I use for my "developer life", and that will be finished to be spied. &lt;/p&gt;
&lt;p&gt;And I don't care of facebook at all.&lt;/p&gt;
&lt;p&gt;When things go wrong with google and gmail I will warn the family to start thinking about changing their habits, but that... it's another story....&lt;/p&gt;</content><category term="orotangi"></category><category term="triggerhappy"></category><category term="evernote"></category><category term="ifttt"></category><category term="wallabag"></category><category term="python"></category></entry><entry><title>UnitTest, Coverage and Mock</title><link href="https://foxmask.net/post/2016/10/21/test-coverage-mock/" rel="alternate"></link><published>2016-10-21T20:00:00+02:00</published><updated>2016-10-21T20:00:00+02:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2016-10-21:/post/2016/10/21/test-coverage-mock/</id><summary type="html">&lt;p&gt;Today, I will show you the way to mock "service" in your UnitTest processing. As usual, I make things simples, like a rookie would discovered it.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;When we write unittest, it comes the moment when we cross the road of some services that we can't test.
So the moment comes when we have to use &lt;a href="https://docs.python.org/dev/library/unittest.mock.html"&gt;Mock&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the following text, you should spot some evidence related to django ;)&lt;/p&gt;
&lt;h1&gt;Function to mock&lt;/h1&gt;
&lt;p&gt;here is the piece of code I will "mock" :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;            let&amp;#39;s save the data&lt;/span&gt;

&lt;span class="sd"&gt;            :param trigger_id: trigger ID from which to save data&lt;/span&gt;
&lt;span class="sd"&gt;            :param data: the data to check to be used and save&lt;/span&gt;
&lt;span class="sd"&gt;            :type trigger_id: int&lt;/span&gt;
&lt;span class="sd"&gt;            :type data:  dict&lt;/span&gt;
&lt;span class="sd"&gt;            :return: the status of the save statement&lt;/span&gt;
&lt;span class="sd"&gt;            :rtype: boolean&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="c1"&gt;# set the title and content of the data&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ServiceTwitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

            &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{title} {link}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;twitter_api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;critical&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Twitter ERR {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;update_result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Mock a complet function&lt;/h2&gt;
&lt;p&gt;the piece of unittest with the mock applied to &lt;code&gt;save_data&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;unittest.mock&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;patch&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_save_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;
        &lt;span class="n"&gt;trigger_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foobar #tag&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a title&amp;#39;&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://domain.ltd&amp;#39;&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertNotEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;patch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ServiceTwitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;save_data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;mock_save_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;se&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ServiceTwitter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;se&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;mock_save_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_called_once_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then the testing show us &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;coverage run --source=&amp;#39;.&amp;#39; manage.py test -v2
...
test_save_data (th_twitter.tests.ServiceTwitterTest) ... ok
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fine !&lt;/p&gt;
&lt;p&gt;But the coverage report (in html) shows us &lt;/p&gt;
&lt;p&gt;&lt;img alt="Twitter mocking save_data" src="/static/twitter_mock_save_data.png"&gt;&lt;/p&gt;
&lt;p&gt;and the % &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[foxmask:~/DjangoVirtualEnv/django-trigger-happy/django-th] [django-trigger-happy] coverage report -m |grep twitter
th_twitter/__init__.py                                2      0   100%   
th_twitter/forms.py                                  12      0   100%   
th_twitter/models.py                                 21      0   100%   
th_twitter/my_twitter.py                            117     56    52%   119-121, 138-173, 190-209, 219-231, 241-250, 256, 273-278
th_twitter/tests.py                                  80      0   100%   
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Mock one FunctionB in a FunctionA&lt;/h2&gt;
&lt;p&gt;It's fine, but in our quest of the perfect tests and to be sharper, we would like to test the content of &lt;code&gt;save_data&lt;/code&gt; and only mock the function that makes the call to the Twitter API (named Twython).&lt;/p&gt;
&lt;p&gt;To do so we can use the manager like previously, or a decorator. &lt;/p&gt;
&lt;p&gt;Just have a look :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;unittest.mock&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;patch&lt;/span&gt;            


    &lt;span class="nd"&gt;@patch.object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Twython&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;update_status&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_save_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mock1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_twitter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;
        &lt;span class="n"&gt;trigger_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foobar #tag&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a title&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://domain.ltd&amp;#39;&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertNotEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;se&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ServiceTwitter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;se&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;mock1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_called_once_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And this time the coverage report show us &lt;/p&gt;
&lt;p&gt;&lt;img alt="Twitter mocking save_data" src="/static/twitter_mock_save_data2.png"&gt;&lt;/p&gt;
&lt;p&gt;and the % &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[foxmask:~/DjangoVirtualEnv/django-trigger-happy/django-th] [django-trigger-happy] coverage report -m |grep twitter
th_twitter/__init__.py                                2      0   100%   
th_twitter/forms.py                                  12      0   100%   
th_twitter/models.py                                 21      0   100%   
th_twitter/my_twitter.py                            117     40    66%   119-121, 138-173, 205-208, 241-250, 256, 273-278
th_twitter/tests.py                                  80      0   100%   
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Mock (2 or more functions) FunctionB and FunctionC in a FunctionA&lt;/h2&gt;
&lt;p&gt;Let's suppose you want to mock several functions in &lt;code&gt;save_data&lt;/code&gt;, we will do something like this :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;unittest.mock&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;patch&lt;/span&gt;            

    &lt;span class="c1"&gt;# be careful with the order of the decorator &lt;/span&gt;
    &lt;span class="nd"&gt;@patch.object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Twython&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;update_status&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# will go to mock2&lt;/span&gt;
    &lt;span class="nd"&gt;@patch.object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AnotherService&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;other_method&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# will go to mock1&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_save_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mock1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mock2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_twitter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;
        &lt;span class="n"&gt;trigger_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foobar #tag&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a title&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://domain.ltd&amp;#39;&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertNotEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;se&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ServiceTwitter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;se&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trigger_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;mock1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_called_once_with&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
        &lt;span class="n"&gt;mock2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_called_once_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/!\ Here, be really very carefull with the order of the decorator: &lt;/p&gt;
&lt;p&gt;if the parms for Twython.update_status and AnotherService.other_method are the same, we can write twice the same like &lt;code&gt;mock1.assert_called_once(status=content)&lt;/code&gt; and &lt;code&gt;mock2.assert_called_once(status=content)&lt;/code&gt; (for example)
but if they don't, be sure to set the right parm to the right 'mock'&lt;/p&gt;
&lt;h1&gt;End&lt;/h1&gt;
&lt;p&gt;Hope this will be helpful like it was for me as I spent a lot of time to find and test that ;)&lt;/p&gt;
&lt;p&gt;If you want to dig that topic &lt;a href="https://docs.python.org/dev/library/unittest.mock.html#patch-object"&gt;have a look at the doc&lt;/a&gt;&lt;/p&gt;</content><category term="test"></category><category term="coverage"></category><category term="mock"></category><category term="python"></category></entry><entry><title>Revue Technique de la semaine du 05/09/2016</title><link href="https://foxmask.net/post/2016/09/08/revue-technique-de-la-semaine-du-05092016/" rel="alternate"></link><published>2016-09-08T08:00:00+02:00</published><updated>2016-09-08T08:00:00+02:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2016-09-08:/post/2016/09/08/revue-technique-de-la-semaine-du-05092016/</id><summary type="html">&lt;p&gt;Cela faisait un bon moment que je ne m'etais pas penché sur une revue technique, depuis ma migration Wordpress =&amp;gt; Pelican à vrai dire :)&lt;/p&gt;
&lt;p&gt;Donc voici un petit tour de la technosphere des sujets, projets (et autre bidules machins trucs) croisés sur le chemin &lt;/p&gt;
&lt;h1&gt;Wallabag 2.0.8&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wallabag.org"&gt;Wallabag&lt;/a&gt; nous gratifie …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cela faisait un bon moment que je ne m'etais pas penché sur une revue technique, depuis ma migration Wordpress =&amp;gt; Pelican à vrai dire :)&lt;/p&gt;
&lt;p&gt;Donc voici un petit tour de la technosphere des sujets, projets (et autre bidules machins trucs) croisés sur le chemin &lt;/p&gt;
&lt;h1&gt;Wallabag 2.0.8&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wallabag.org"&gt;Wallabag&lt;/a&gt; nous gratifie d'une version 2.0.8 avant une potentielle 2.1&lt;/p&gt;
&lt;h1&gt;Sam et Max&lt;/h1&gt;
&lt;p&gt;'ils' sont de retour avec de nouveaux billets dont le dernier aborde UUID : &lt;a href="http://sametmax.com/verifier-quun-uuid-est-valide-en-python/"&gt;Vérifier qu'un UUID est valide en Python&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Django&lt;/h1&gt;
&lt;h2&gt;... et une nouvelle release&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.djangoproject.com/weblog/2016/sep/01/bugfix-release/"&gt;une version 1.10.1 contentant quelques bugfix&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;... et Docker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://semaphoreci.com/community/tutorials/dockerizing-a-python-django-web-application"&gt;Dockerizing a Python Django Web Application&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;... et le framework message&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/tips/2016/09/06/django-tip-14-messages-framework.html"&gt;Django Tips #14 Using the Messages Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/tips/2016/08/23/django-tip-13-f-expressions.html"&gt;Django Tips #13 F() Expressions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;... et sa config gunicorn&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://samoylov.tech/2016/08/31/deploying-django-with-gunicorn-and-supervisor/"&gt;Deploying Django with Gunicorn and Supervisor&lt;/a&gt;
Billet que j'ai trouvé trop trop trop court comparé à un de &lt;a href="https://foxmask.trigger-happy.eu/post/2015/06/19/supervisor-celery-django-orchestration/"&gt;mes vieux billets&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Python&lt;/h1&gt;
&lt;p&gt;La couverture de ce livre &lt;a href="http://www.blog.pythonlibrary.org/2016/09/06/python-201-is-officially-published/"&gt;Python 201&lt;/a&gt;, m'a fait penser à un coaching culinaire par Ratatouille :) N'en demeure pas moins qu'il existe ... pour les dev intermediaires.&lt;/p&gt;
&lt;p&gt;7 trucs pour ecrire du code plus meilleur ;)&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="fr"&gt;&lt;p lang="en" dir="ltr"&gt;7 Simple &lt;a href="https://twitter.com/hashtag/Tricks?src=hash"&gt;#Tricks&lt;/a&gt; to Write Better &lt;a href="https://twitter.com/hashtag/Python?src=hash"&gt;#Python&lt;/a&gt; Code &lt;a href="https://t.co/uqEN50U7nI"&gt;https://t.co/uqEN50U7nI&lt;/a&gt; &lt;a href="https://t.co/dk2NDVVhZd"&gt;pic.twitter.com/dk2NDVVhZd&lt;/a&gt;&lt;/p&gt;&amp;mdash; Nicolas RAMY (@darkelda) &lt;a href="https://twitter.com/darkelda/status/770554167932968960"&gt;30 août 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;h1&gt;IndexError&lt;/h1&gt;
&lt;p&gt;Comment pourquoi que ca marche-t-il (pas) mon code, S.O.S d'un codeur en détresse :  &lt;/p&gt;
&lt;p&gt;voici les 5 derniers sujets traités ou en cours sur
&lt;a href="http://IndexError.net"&gt;IndexError.net&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://indexerror.net/4267/facebook-api"&gt;Facebook API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://indexerror.net/4257/ajouter-des-donn%C3%A9es-aux-fields-dun-form"&gt;Ajouter des données aux fields d'un form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://indexerror.net/4265/architecture-faut-limiter-methodes-accessibles-dun-objet"&gt;Architecture : faut-il limiter les methodes accessibles d'un objet ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://indexerror.net/4259/comment-trier-les-logs-de-ses-diff%C3%A9rentes-applis"&gt;Comment trier les logs de ses différentes applis ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://indexerror.net/4203/decorateur-async-await"&gt;decorateur async await&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://indexerror.net/4198/vos-types-customis%C3%A9s-utiles"&gt;vos types customisés utiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Meetup&lt;/h1&gt;
&lt;p&gt;La rentrée scolaire annonce son lot de rencontres, dont une le 13/09 : &lt;a href="https://www.meetup.com/fr-FR/Paris-Devops-Meetup/events/233922902/"&gt;Paris Devops&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Firefox&lt;/h1&gt;
&lt;p&gt;On nous promettrait un Firefox &lt;a href="https://techcrunch.com/2016/09/02/multi-process-firefox-brings-400-700-improvement-in-responsiveness/"&gt;7x plus rapide que l'actuel&lt;/a&gt; grâce au multiprocessing, qui arriverait entre la version 49 et la 51.
On pourrait déjà testé la fonction en l'activant depuis "about:config" en changeant le paramètre "browser.tabs.remote.autostart" à True.
Un temps sur mobile, le multiprocessing a été retiré car produisant un bottleneck, mais avec cette amélioration sur la version desktop, le mutliprocessing sur la version sur mobile pourrait faire son retour.&lt;/p&gt;
&lt;h1&gt;Smartphone&lt;/h1&gt;
&lt;p&gt;Coté smartphones, pendant que &lt;a href="http://www.frandroid.com/marques/samsung/375914_galaxy-note-7-de-samsung-bientot-bannis-vols-americains"&gt;Samsumg met le feu&lt;/a&gt;, &lt;a href="http://www.frandroid.com/marques/apple/376170_apple-watch-series-2-officielle"&gt;Apple se mouille 30minutes 'max'&lt;/a&gt; et nous fait des écouteurs &lt;a href="https://twitter.com/TheRealSheldonC/status/773787951260114944"&gt;sans fils&lt;/a&gt; et Google rebaptise sa gamme &lt;a href="http://www.frandroid.com/marques/google/375266_google-lancerait-cet-automne-pixel-pixel-xl-a-place-nexus"&gt;Nexus en Pixel&lt;/a&gt; pour faire moins geek et plus grand publique.&lt;/p&gt;
&lt;h1&gt;Ce n'est qu'un au revoir&lt;/h1&gt;
&lt;p&gt;Un dinosaure qui disparait d'internet, &lt;a href="http://www.readability.com"&gt;Readability&lt;/a&gt; ferme ses portes le 30 de ce mois, à vos API, à vos migrations de service, de préférence vers Wallabag ;)&lt;/p&gt;
&lt;h1&gt;C U&lt;/h1&gt;
&lt;p&gt;A bientôt !&lt;/p&gt;</content><category term="Django"></category><category term="indexerror"></category><category term="python"></category><category term="samsung"></category><category term="pixel"></category><category term="apple"></category><category term="docker"></category><category term="firefox"></category></entry><entry><title>Apparition subliminiale de TriggerHappy au PHPTour 2016 avec Wallabag</title><link href="https://foxmask.net/post/2016/06/01/trigger-happy-apparition-subliminale-phptour-2016-wallabag/" rel="alternate"></link><published>2016-06-01T15:00:00+02:00</published><updated>2016-06-01T15:00:00+02:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2016-06-01:/post/2016/06/01/trigger-happy-apparition-subliminale-phptour-2016-wallabag/</id><summary type="html">&lt;p&gt;Le mois dernier s'est déroulé le PHPTour 2016 à Clermont Ferrand.&lt;/p&gt;
&lt;p&gt;Lors de cet évènement, TriggerHappy fit une apparation subliminale ;) lors de la présentation, par le project &lt;a href="https://wallabag.org"&gt;wallabag&lt;/a&gt;, de la migration version Symfony 3.&lt;/p&gt;
&lt;p&gt;La présentation de &lt;a href="https://github.com/nicosomb"&gt;@nicosomb&lt;/a&gt; et de son binôme &lt;a href="https://twitter.com/j0k"&gt;@j0k&lt;/a&gt; est disponible &lt;a href="https://nicosomb.github.io/talk-phptour-2016/"&gt;ici&lt;/a&gt;. Et "l'apparition" &lt;a href="https://nicosomb.github.io/talk-phptour-2016/#/9/2"&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mais …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Le mois dernier s'est déroulé le PHPTour 2016 à Clermont Ferrand.&lt;/p&gt;
&lt;p&gt;Lors de cet évènement, TriggerHappy fit une apparation subliminale ;) lors de la présentation, par le project &lt;a href="https://wallabag.org"&gt;wallabag&lt;/a&gt;, de la migration version Symfony 3.&lt;/p&gt;
&lt;p&gt;La présentation de &lt;a href="https://github.com/nicosomb"&gt;@nicosomb&lt;/a&gt; et de son binôme &lt;a href="https://twitter.com/j0k"&gt;@j0k&lt;/a&gt; est disponible &lt;a href="https://nicosomb.github.io/talk-phptour-2016/"&gt;ici&lt;/a&gt;. Et "l'apparition" &lt;a href="https://nicosomb.github.io/talk-phptour-2016/#/9/2"&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mais ... je vous vois venir faire votre "Géronte" et me sortir "Mais que diable allait il faire dans cette galère" (genre : "mélanger des projets PHP et Python mais quelle hérésie") mais en fait, ce n'est pas du tout le cas.&lt;/p&gt;
&lt;p&gt;Wallabag dans sa mouture 2.0, pourvue de son API, laisse toute latitude et on a franchement plaisir à y mettre ses découvertes au gré du buttinage sur la toie ou à faire sa veille techno en recupérant régulièrement les infos de ses sites favoris, spécialisés.
En plus, ce qui ne gâte rien, c'est l'existence de plugin pour Firefox et d'une application Android. &lt;/p&gt;
&lt;p&gt;Ca en fait un bon projet bien complet à mon sens, qui surpasse le classique troll de PHP vs Python.&lt;/p&gt;
&lt;p&gt;Alors "ayez confiaaaance" et laissez vous tenter par les 2 :)&lt;/p&gt;</content><category term="TriggerHappy"></category><category term="python"></category><category term="php"></category><category term="wallabag"></category></entry><entry><title>Panda, Le gros nounours noir et blanc est passé</title><link href="https://foxmask.net/post/2016/05/14/le-gros-nounours-noir-et-blanc-est-passe/" rel="alternate"></link><published>2016-05-14T13:00:00+02:00</published><updated>2016-05-14T13:00:00+02:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2016-05-14:/post/2016/05/14/le-gros-nounours-noir-et-blanc-est-passe/</id><summary type="html">&lt;p&gt;En lisant ma pile d'articles de veille techno dans mon instance &lt;a href="https://walabag.org"&gt;wallabag&lt;/a&gt;, je suis tombé sur un article mesurant le temps passé sur ses projets.
Rien de nouveau au soleil puisque tout à chacun connait bien &lt;a href="https://pypi.python.org/pypi/pandas"&gt;pandas&lt;/a&gt; :)&lt;/p&gt;
&lt;p&gt;Cependant, après un petit coup de &lt;code&gt;pip install git-pandas&lt;/code&gt; et en exécutant &lt;a href="https://github.com/wdm0006/git-pandas/blob/master/examples/hours_estimate.py"&gt;ce …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;En lisant ma pile d'articles de veille techno dans mon instance &lt;a href="https://walabag.org"&gt;wallabag&lt;/a&gt;, je suis tombé sur un article mesurant le temps passé sur ses projets.
Rien de nouveau au soleil puisque tout à chacun connait bien &lt;a href="https://pypi.python.org/pypi/pandas"&gt;pandas&lt;/a&gt; :)&lt;/p&gt;
&lt;p&gt;Cependant, après un petit coup de &lt;code&gt;pip install git-pandas&lt;/code&gt; et en exécutant &lt;a href="https://github.com/wdm0006/git-pandas/blob/master/examples/hours_estimate.py"&gt;ce script panda&lt;/a&gt; on peut donc mesurer le temps passé directos sur ses dépots, et donc pour bibi, il en ressort ceci &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python hours_estimate.py &lt;span class="p"&gt;|&lt;/span&gt;grep -v &lt;span class="m"&gt;0&lt;/span&gt;.00000

            committer       hours         repository
&lt;span class="m"&gt;0&lt;/span&gt;             foxmask    &lt;span class="m"&gt;2&lt;/span&gt;.603889          django-th
&lt;span class="m"&gt;3&lt;/span&gt;       Olivier Demah  &lt;span class="m"&gt;134&lt;/span&gt;.288056          django-th
&lt;span class="m"&gt;4&lt;/span&gt;             FoxMaSk    &lt;span class="m"&gt;3&lt;/span&gt;.017500          django-th
&lt;span class="m"&gt;0&lt;/span&gt;       Olivier Demah    &lt;span class="m"&gt;3&lt;/span&gt;.000000  django-th-ansible
&lt;span class="m"&gt;0&lt;/span&gt;       Olivier Demah    &lt;span class="m"&gt;3&lt;/span&gt;.877222       wallabag_api
&lt;span class="m"&gt;0&lt;/span&gt;       Olivier Demah    &lt;span class="m"&gt;8&lt;/span&gt;.882778        dj-diabetes
&lt;span class="m"&gt;1&lt;/span&gt;             foxmask    &lt;span class="m"&gt;1&lt;/span&gt;.000000        dj-diabetes
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;En tout 140heures pour Trigger Happy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si je pars sur des journées de 6heures ca fait 23jours ou 46jours en codant "à temps perdu", en gros un bon mois et demi non stop quoi.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4hres pour l'API &lt;a href="https://github.com/foxmask/wallabag_api"&gt;wallabag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;9hres pour le projet de "&lt;a href="https://github.com/foxmask/dj-diabetes"&gt;gestion de son diabete au quotidien&lt;/a&gt;"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pas de quoi fouetter un chat, mais ca donne une idée du temps que j'ai dépensé ;)
Evidement la dedans on ne peut pas quantifier les durées pour le temps passé à tester moult techno pour arriver au resultat escompté. Mais ça donne un ordre de grandeur !&lt;/p&gt;</content><category term="TriggerHappy"></category><category term="python"></category><category term="Pandas"></category></entry></feed>