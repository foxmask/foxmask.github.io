<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Le Free de la Passion - pelican</title><link href="https://foxmask.net/" rel="alternate"></link><link href="https://foxmask.net/feeds/pelican.atom.xml" rel="self"></link><id>https://foxmask.net/</id><updated>2016-01-05T12:00:00+01:00</updated><entry><title>Dans la série, j'ai migré vers Pélican</title><link href="https://foxmask.net/post/2016/01/05/dans-la-serie-jai-migre-vers-pelican/" rel="alternate"></link><published>2016-01-05T12:00:00+01:00</published><updated>2016-01-05T12:00:00+01:00</updated><author><name>foxmask</name></author><id>tag:foxmask.net,2016-01-05:/post/2016/01/05/dans-la-serie-jai-migre-vers-pelican/</id><summary type="html">&lt;p&gt;Dans cet article, je vais aborder comment je créé des billets et les publie automatiquement sans plus lever le petit doigt.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Le Besoin&lt;/h2&gt;
&lt;p&gt;Le besoin est le suivant, &lt;a href="http://getpelican.com"&gt;Pélican&lt;/a&gt; c'est cool parce que statique mais le travers c'est qu'on ne dispose d'aucun outil "web" pour produire un billet.
Certes, si je suis joueur je peux, via mon smartphone, me connecter sur le "blog", lancer vi et produire mon billet.md :-)
On voit le coté pratique de la chose :)&lt;/p&gt;
&lt;h2&gt;Petite digression&lt;/h2&gt;
&lt;p&gt;Gordon, sur &lt;a href="irc://irc.freenode.net/sametmax"&gt;irc://irc.freenode.net/sametmax&lt;/a&gt; m'a parlé de Lektor, un CMS à base de fichiers plats, sans aucune base de données. Le projet semble cool.
Ce qui m'a fait sourire dans l'explication de la création de ce CMS c'est que l'auteur tire sur WordPress et balaye méchament de la main toutes les solutions de generation de pages statiques pour un blog en disant que c'est orienté pour les developpeurs, soit !&lt;/p&gt;
&lt;p&gt;Mais quand on regarde attentivement la doc, ce n'est pas très orienté pour les "non dev" pour autant. Pourquoi ? &lt;a href="https://www.getlektor.com/docs/quickstart/"&gt;Regardons le quickstart&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The best way to get started with Lektor is to use the quickstart command to let Lektor generate a basic project layout for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Il faut taper une commande pour créer un projet. Ca suppose que l'utilisateur sait utiliser la ligne de commandes et ... ait accès à un shell pour héberger son site.
Or avec Wordpress, on décompresse l'archive, on transfert via FTP chez son hébergeur (sans accès SSH) et on a déjà accès à son blog.&lt;/p&gt;
&lt;p&gt;Bref passons :)&lt;/p&gt;
&lt;h2&gt;Billets depuis GitHub&lt;/h2&gt;
&lt;h3&gt;via des issues&lt;/h3&gt;
&lt;p&gt;Bob m'a parlé d'une solution rigolote, à base d' "issues" github, qui permet de produire directement des billets en utilisant du coup l'interface "markdown" de GitHub et des tags pour gérer le statut du billet.&lt;/p&gt;
&lt;h3&gt;via des nouveaux fichiers&lt;/h3&gt;
&lt;p&gt;Du coup ca m'a donné l'idée d'également exploiter l'interface markdown de github, pour, ce coup-ci, créer directement des fichiers dans le dossier &lt;strong&gt;content&lt;/strong&gt;.
Puis une fois fait, sur le serveur hébergeant le blog, déclencher, via une &lt;em&gt;crontab&lt;/em&gt;, un &lt;em&gt;git pull&lt;/em&gt;, et lancer la génération du nouveau billet.&lt;/p&gt;
&lt;p&gt;La tâche dans ma crontab donne ceci :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; * * * . /foxhome/.keychain/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOSTNAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;-sh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . /foxblog/bin/activate &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /foxblog/website &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git pull &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(on passera sur le fait que j'ai un venv dans /foxblog:)&lt;/p&gt;
&lt;p&gt;L'astuce ici consiste à utiliser &lt;strong&gt;keychain&lt;/strong&gt;, pour que le &lt;em&gt;git pull&lt;/em&gt; ne reste pas stuck sur la demande de votre passphrase lors de l'exécution de la tâche&lt;/p&gt;
&lt;p&gt;En effet, après l'installation de keychain, on lanche la commande&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keychain &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.ssh/id_dsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ce qui produit&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ keychain ~/.ssh/id_rsa

 * keychain &lt;span class="m"&gt;2&lt;/span&gt;.7.1 ~ http://www.funtoo.org
 * Starting ssh-agent...
 * Starting gpg-agent...
 * Adding &lt;span class="m"&gt;1&lt;/span&gt; ssh key&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;: /foxhome/.ssh/id_rsa
Enter passphrase &lt;span class="k"&gt;for&lt;/span&gt; /foxhome/.ssh/id_rsa:
 * ssh-add: Identities added: /foxhome/.ssh/id_rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cette commande n'est à taper qu'une seule fois, par exemple après un reboot du serveur.
Si vous la tapez une seconde fois il ne se passera rien :) il réaffichera la liste des clés déjà chargées&lt;/p&gt;
&lt;h2&gt;Vous avez dit Offline ?&lt;/h2&gt;
&lt;p&gt;Enfin, s'il vous arrive d'être déconnecté et ne pouvez exploiter github pour produire vos billets, ben un bête editeur texte fait l'affaire :) bon si vous avez PyCharm, vous avez un super editeur qui vous montre le rendu en live de votre texte;)
Pour ma part je suis toujours fourré avec Evernote pour ce genre de chose, dans le bus et le train. 
Ca permet de relire plusieurs fois avant de commit 'n' fois pour rien le nouveau billet.&lt;/p&gt;
&lt;p&gt;Avec tout ça, on est paré :)&lt;/p&gt;</content><category term="python"></category><category term="pelican"></category></entry><entry><title>De wordpress à pelican</title><link href="https://foxmask.net/post/2016/01/02/de-wordpress-a-pelican/" rel="alternate"></link><published>2016-01-02T17:00:00+01:00</published><updated>2016-01-02T17:00:00+01:00</updated><author><name>FoxMaSk</name></author><id>tag:foxmask.net,2016-01-02:/post/2016/01/02/de-wordpress-a-pelican/</id><summary type="html">&lt;p&gt;Un enième billets d'une migration de Wordpress à Pelican&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ce billet est surement le &lt;em&gt;beacoupdième&lt;/em&gt; abordant le sujet ;-)&lt;/p&gt;
&lt;p&gt;J'irai donc faire court dans la mesure du possible pour expliciter le &lt;em&gt;pourquoi&lt;/em&gt;, le &lt;em&gt;comment&lt;/em&gt;, et une &lt;em&gt;idée&lt;/em&gt; qui a germé lors de l'utilisation de &lt;a href="http://getpelican.com" title="Generateur statique de site web"&gt;pelican&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Pourquoi ?&lt;/h1&gt;
&lt;p&gt;La réponse est multiple, et un peu redondante avec le billet précédent.
J'ai voulu mettre fin à mon blog en wordpress parce que je ne vais pas continuer à conserver le domaine et l'hebergement associé. Comme je n'ai tout de même pas voulu tout mettre aux oubliettes, j'ai tout de même conserver un peu de ces 11ans de blog.
Le choix vers pelican s'est fait naturellement après l'avoir testé pour 2 autres blogs, celui pour "&lt;a href="http://smcomm.trigger-happy.eu"&gt;la communauté sam et max&lt;/a&gt;" et celui du projet &lt;a href="http://blog.trigger-happy.eu"&gt;trigger-happy&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Comment ?&lt;/h1&gt;
&lt;p&gt;Comme le dit la doc, en premier lieu il faut exporter son blog wordpress dans un fichier XML.
Après, pour l'importer, on choisit le format d'import : reStructuredText, Markdown.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican-import --wpfile foxmaskinfo.xml 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ainsi lancée, la commande part pour me traduire 900 billets en .rst&lt;/p&gt;
&lt;p&gt;Mais là j'ai pris une sérieuse claque.
A chaque lancement de la commande je me coltinais des erreurs de formatage, des retour à la ligne inopinée, des urls tronquées pour des carriage return line feed inopinées.
Au bout de 2 jours, j'arrivais à finir ma migration d'import en ayant pris soin de remplacer toutes les urls http://foxmask.info et http://foxmask.bzh en '/' purement.
Mais un malencontreux et tardif (vu l'heure)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -f content/*
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;m'a coupé les pattes , 2j partis en fumée j'en pouvais plus, j'étais sur le point de laisser tomber la migration.&lt;/p&gt;
&lt;p&gt;J'ai donc cherché une recette sur la toile, sur le best practice de cette migration et là je tombe sur &lt;a href="http://kevin.deldycke.com/2013/02/wordpress-to-pelican/"&gt;ce post&lt;/a&gt; complet.
Et surtout j'étais passé à coté du format Markdown.
Donc nouveau plan de bataille :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;utiliser le format markdown&lt;/li&gt;
&lt;li&gt;gerer le remplacement de foxmask.(bzh|info) avec PyCharm afin qu'il gère le remplacement récursivement et tranquillement.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican-import --wpfile -m markdown foxmaskinfo.xml 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Et là, miracle : PAS UNE SEULE erreur de formatage à l'issue de cette migration, j'étais comme deux ronds de flan.&lt;/p&gt;
&lt;p&gt;Ensuite, avec PyCharm, j'acheve la mise à jour des urls en 2min :P&lt;/p&gt;
&lt;p&gt;Le reste de la migration c'est :&lt;/p&gt;
&lt;p&gt;dans &lt;em&gt;pelicanconf.py&lt;/em&gt;, gérer le chemin static de toutes les images que j'ai pu coller dans le blog&lt;/p&gt;
&lt;p&gt;Puis après quelques ajustements de &lt;a href="https://github.com/duilio/pelican-octopress-theme"&gt;themes&lt;/a&gt; et &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;plugin pelican&lt;/a&gt;, voilà le blog prêt.&lt;/p&gt;
&lt;h1&gt;Une idée&lt;/h1&gt;
&lt;p&gt;Maintenant une idée toute QQ.&lt;/p&gt;
&lt;p&gt;Pelican c'est cool parce que statique. Ya pas plus simple qu'une page HTML à servir pour un serveur HTTP.&lt;/p&gt;
&lt;p&gt;Par contre niveau production de billet, pelican est très geek oriented.
Je ne m'imagine pas un utilisateur lambda de wordpress, passer à Pelican.
Déjà, les thèmes ne courrent pas les rues, et la saisie des billets n'est pas le plus fun.&lt;/p&gt;
&lt;p&gt;Du coup j'm'ai dizamoimeme : pourquoi ne pas faire une interface web qui permette de pondre ses billets ? Pas un truc aussi ambitieux que l'interface de Wordpress, mais au moins :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;une page pour créer un article avec un editeur wysiwyg&lt;/li&gt;
&lt;li&gt;à l'enregistrement de l'article, créer le fichier .md&lt;/li&gt;
&lt;li&gt;générer la page html via la commande make html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;avant de me lancer dans ce truc j'ai demandé sur &lt;a href="irc://irc.freenode.net/pelican"&gt;#pelican@freenode&lt;/a&gt; si un tel projet existait, et j'ai eu droit à une réponse de normand... Donc bon je vois kiki va kor faire un truc con kwa.&lt;/p&gt;</content><category term="pelican"></category><category term="python"></category></entry><entry><title>Une autre histoire</title><link href="https://foxmask.net/post/2015/12/29/une-autre-histoire/" rel="alternate"></link><published>2015-12-29T17:00:00+01:00</published><updated>2015-12-29T17:00:00+01:00</updated><author><name>FoxMaSk</name></author><id>tag:foxmask.net,2015-12-29:/post/2015/12/29/une-autre-histoire/</id><summary type="html">&lt;p&gt;Une autre histoire ici commence ;-)&lt;/p&gt;</summary><content type="html">&lt;p&gt;Voici donc le début de la continuité de l'histoire de ce blog de 11 ans d'âge ;)&lt;/p&gt;
&lt;p&gt;Pour ne pas "trop" perdre en interactivité avec ceux qui me suivent tant bien que mal, j'ai collé disqus comme outil pour vous permettre de commenter mes billets.&lt;/p&gt;
&lt;p&gt;Comme je ne suis pas du genre à imposer quoique ce soit, vous n'êtes pas obligé d'être connecté à g+, twitter, facebook, ou disqus.
Pour commenter en tant que visiteur, cliquer dans le champ nom, puis sur la case à cocher "i'd rather post as guest", ensuite mettez simplement votre email et le tour est joué.&lt;/p&gt;
&lt;p&gt;A noter que j'ai désactivé les trackers de disqus, permettant de vous coller de la pub "personnalisée".
On va pas dévié du leitmotiv du site hein ;) &lt;/p&gt;
&lt;p&gt;Voilou ;) &lt;/p&gt;
&lt;p&gt;Ici, je ne vous parlerai plus que de dev et rien d'autre. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Bonnes fêtes de fin d&amp;#39;année 2015, attention à 2016 et à vos prochaines résolutions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="pelican"></category><category term="python"></category></entry></feed>